{
  "folderName": "FAQ",
  "folderPath": ".autodoc\\docs\\json\\docs\\api\\FAQ",
  "url": "https://dune.com/tree/master/doc\\docs\\json\\docs\\api\\FAQ",
  "files": [
    {
      "fileName": "billing-pricing.md",
      "filePath": "docs\\api\\FAQ\\billing-pricing.md",
      "url": "https://dune.com/blob/master/api\\FAQ\\billing-pricing.md",
      "summary": "# Dune API Billing & Pricing\n\nThis technical guide provides information about Dune's API billing and pricing. It covers the following topics:\n\n## FAQ: Billing & Pricing\n\nThis section provides answers to frequently asked questions about Dune's API billing and pricing.\n\n### How will API Billing work with the new Team plans?\n\nThis header explains that Dune will soon support API keys on a team level in the first few months of 2023. Any usage associated with a team API key will be billed to their respective team. This feature is relevant to the app folder of the project, as it pertains to the billing and pricing of the API.\n\n### What’s a datapoint?\n\nThis header defines a datapoint as rows * columns with an additional limit of 50 avg bytes per cell in a set of results. It also provides a formula to express datapoints. This information is relevant to the data tables folder of the project, as it pertains to the calculation of datapoints.\n\n### Do I get charged datapoints for every execution?\n\nThis header explains that Dune charges datapoints in the result for the 1st read result of every distinct query execution and every subsequent 100th read per billing cycle. This information is relevant to the query folder of the project, as it pertains to the billing and pricing of query executions.\n\nOverall, this technical guide provides important information about Dune's API billing and pricing, including how it works with team plans, how datapoints are calculated, and how they are charged for query executions.",
      "questions": "1. What is the pricing model for Dune's API and how is it calculated?\nA blockchain SQL analyst might want to know more about the specific pricing model for Dune's API and how it is calculated based on usage and datapoints.\n\n2. How does Dune handle data privacy and security for API billing and pricing?\nA blockchain SQL analyst might be interested in understanding how Dune ensures data privacy and security for API billing and pricing, especially if sensitive data is being transmitted.\n\n3. Are there any limitations or restrictions on the number of API calls or datapoints that can be used per billing cycle?\nA blockchain SQL analyst might want to know if there are any limitations or restrictions on the number of API calls or datapoints that can be used per billing cycle, as this could impact the cost and feasibility of using Dune's API for their blockchain project."
    },
    {
      "fileName": "functionality.md",
      "filePath": "docs\\api\\FAQ\\functionality.md",
      "url": "https://dune.com/blob/master/api\\FAQ\\functionality.md",
      "summary": "# Dune API Functionality\n\nThis technical guide provides answers to frequently asked questions about how the Dune API works. The guide is divided into sections that cover different aspects of the Dune API functionality. \n\n## General\n\nThis section provides general information about the Dune API.\n\n### How many Requests Per Minute can I make?\n\nThe API is currently set to a rate limit of 60 requests per minute. \n\n### Are there specified SLAs?\n\nSLAs will be available in the future on Enterprise pricing plans.\n\n## Executing Queries\n\nThis section provides information on how to execute queries using the Dune API.\n\n### How do I find a query id?\n\nWhen navigating to a query, it’s the first number after “/queries/” in the URL. An example is provided in the guide.\n\n### Does the API support Query Parameters?\n\nThe API does support Query Parameters. The guide provides information on how to pass parameter data using cURL and Python.\n\n### What are the performance and overall differences between the Dune API and the Dune web app? What are the differences in what I can query?\n\nThere are no major performance differences or differences in what can be accessed between the two if both are using the same app plan tier. The Dune API gives you programmatic access to the capabilities and data sets that can already be accessed from the Dune web app.\n\n### What is the execution timeout limit and can I request a longer limit?\n\nThe query execution timeout limit matches the Dune web app - 30 minutes.\n\n### Which query engine should I use with the API?\n\nThe guide recommends using the API with v2 Dune SQL as the old v1 engine and v2 Spark SQL are being deprecated.\n\n## Check Execution Status\n\nThis section provides information on how to check the execution status of a query.\n\n### What is the difference between the states “Executing” and “Pending”?\n\nPending means the execution is waiting for an available execution connection slot. Executing means the query is currently executing against the database.\n\n## Reading Results Data\n\nThis section provides information on how to read results data from a query.\n\n### Can I ingest data by getting a direct connection to the database instead?\n\nNot currently. In the interim, the guide recommends periodically fetching data in regular intervals.\n\n### Are query results data saved for faster retrieval?\n\nYes!\n\n### How long are the results data from an execution stored for?\n\nCurrently set to 2 years but may be reduced to something closer to 90 days in the future.\n\n### How much data can I retrieve in a single API result call?\n\nThere is currently a 250MB limit, but there is a chance this may increase for certain paid plans. The API does not currently return an explicit error upon hitting this limit but will instead fail (timeout) when attempting to retrieve the results.",
      "questions": "1. What is the maximum rate limit for requests per minute and will it change in the future?\n   \n   The API is currently set to a rate limit of 60 requests per minute, but it will soon be set to match the rate limits specified in the varying API plan tiers.\n\n2. How long are the results data from an execution stored for and will it change in the future?\n   \n   Currently, the results data from an execution are stored for 2 years, but it may be reduced to something closer to 90 days in the future.\n\n3. Is there a limit to the amount of data that can be retrieved in a single API result call and will it change in the future?\n   \n   There is currently a 250MB limit, but there is a chance it may increase for certain paid plans. The API does not currently return an explicit error upon hitting this limit but will instead fail (timeout) when attempting to retrieve the results."
    },
    {
      "fileName": "other.md",
      "filePath": "docs\\api\\FAQ\\other.md",
      "url": "https://dune.com/blob/master/api\\FAQ\\other.md",
      "summary": "# Dune API Other FAQs\n\nThis section of the Dune app technical guide provides answers to frequently asked questions about the Dune API. The Dune API is a feature of the Dune app that allows developers to access and interact with Dune's data and functionality programmatically.\n\n## Contacting Dune for API Support\n\nThis header provides information on how to contact Dune for API support. Users can reach out to [api-feedback@dune.com](mailto:api-feedback@dune.com) or join the #[dune-api](https://discord.com/channels/757637422384283659/1019910980634939433) Discord channel for the fastest path towards getting additional questions answered.\n\nThis section is important for developers who may encounter issues or have questions about the Dune API. It provides clear instructions on how to get in touch with Dune's support team for assistance.\n\nExample:\n```\nIf you encounter any issues or have questions about the Dune API, please reach out to api-feedback@dune.com or join the #[dune-api](https://discord.com/channels/757637422384283659/1019910980634939433) Discord channel for assistance.\n```\n\nOverall, this section of the Dune app technical guide is a helpful resource for developers who are working with the Dune API. It provides clear and concise answers to common questions and offers guidance on how to get additional support if needed.",
      "questions": "1. **What is the Dune API and how does it work?** The app technical guide does not provide a detailed explanation of what the Dune API is and how it works. A blockchain SQL analyst might want to know more about the API's functionality and how it interacts with blockchain data.\n2. **What kind of data can be accessed through the Dune API?** The app technical guide does not provide a comprehensive list of the types of data that can be accessed through the Dune API. A blockchain SQL analyst might want to know what specific blockchain data can be queried and analyzed using the API.\n3. **Are there any limitations or restrictions on API usage?** The app technical guide does not mention any limitations or restrictions on API usage, such as rate limits or access controls. A blockchain SQL analyst might want to know if there are any restrictions on how frequently they can query the API or what types of queries are allowed."
    },
    {
      "fileName": "TOS.md",
      "filePath": "docs\\api\\FAQ\\TOS.md",
      "url": "https://dune.com/blob/master/api\\FAQ\\TOS.md",
      "summary": "# Dune API TOS\n\nThis section of the app technical guide covers the Dune API Terms of Service (TOS). The TOS is a legal agreement between Dune and the users of the API. It outlines the terms and conditions that govern the use of the API and the responsibilities of both Dune and the users.\n\nThe header provides a link to the actual API TOS document, which is hosted on the Dune website. Users of the API should read and understand the TOS before using the API. The TOS covers important topics such as acceptable use, intellectual property rights, and liability.\n\nExample:\nIf a developer wants to use the Dune API to build an application, they should first read the API TOS to ensure that their use of the API is in compliance with the terms and conditions outlined in the agreement.\n\n# Conclusion\n\nThe Dune API TOS is an important legal agreement that governs the use of the Dune API. This section of the app technical guide provides a link to the actual TOS document and highlights the importance of reading and understanding the agreement before using the API.",
      "questions": "1. What type of data does the Dune API provide and how is it stored?\n- This app technical guide does not provide information on the type of data provided by the Dune API or how it is stored.\n\n2. Are there any limitations or restrictions on the usage of the Dune API?\n- The Dune API Terms of Service can be found at the provided link, which may contain information on limitations or restrictions.\n\n3. Is there any documentation available on how to integrate and use the Dune API?\n- This app technical guide does not provide information on how to integrate and use the Dune API, but it may be available through the provided link to the API Terms of Service."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc\\docs\\json\\docs\\api\\FAQ` folder contains a collection of technical guides that provide detailed information and answers to frequently asked questions about the Dune API. These guides cover various aspects of the API, including billing and pricing, functionality, and other miscellaneous topics. They are essential for developers and analysts who want to understand and work with the Dune API effectively.\n\nThe `billing-pricing.md` file focuses on the billing and pricing aspect of the Dune API. It explains how API billing works with team plans, the definition of a datapoint, and how datapoints are charged for query executions. This guide is particularly useful for developers who need to manage their API usage and costs.\n\nExample:\n```\nTo calculate the number of datapoints in a query result, use the formula: rows * columns with an additional limit of 50 avg bytes per cell.\n```\n\nThe `functionality.md` file provides answers to frequently asked questions about the Dune API's functionality. It covers general information, executing queries, checking execution status, and reading results data. This guide is essential for developers who want to understand the capabilities and limitations of the Dune API.\n\nExample:\n```\nThe API supports Query Parameters. To pass parameter data using cURL or Python, follow the instructions provided in the guide.\n```\n\nThe `other.md` file addresses miscellaneous questions about the Dune API. It provides information on how to contact Dune for API support, which is crucial for developers who may encounter issues or have questions about the API.\n\nExample:\n```\nFor API support, reach out to api-feedback@dune.com or join the #[dune-api](https://discord.com/channels/757637422384283659/1019910980634939433) Discord channel.\n```\n\nThe `TOS.md` file covers the Dune API Terms of Service (TOS), which is a legal agreement between Dune and the users of the API. It highlights the importance of reading and understanding the TOS before using the API.\n\nExample:\n```\nBefore using the Dune API, read the API TOS to ensure compliance with the terms and conditions outlined in the agreement.\n```\n\nOverall, the guides in this folder are essential resources for developers and analysts working with the Dune API. They provide clear and concise information about various aspects of the API, helping users to understand its capabilities, limitations, and requirements.",
  "questions": ""
}