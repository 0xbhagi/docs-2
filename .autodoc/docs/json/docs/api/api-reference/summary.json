{
  "folderName": "api-reference",
  "folderPath": "docs/api/api-reference",
  "url": "https://dune.com/docs/api/api-reference",
  "files": [
    {
      "fileName": "authentication.md",
      "filePath": "docs/api/api-reference/authentication.md",
      "url": "https://dune.com/docs/api/api-reference/authentication.md",
      "summary": "The app technical guide titled \"Authentication\" provides instructions on how to authenticate API requests in the Dune app. The guide emphasizes the importance of API keys in determining the permissions of private queries and billing for requests. It warns against sharing secret API keys in publicly accessible areas to ensure security.\n\nThe guide provides a specific method for authenticating requests, which involves adding an \"x-dune-api-key\" property to the request header. This property is required for all request types. The guide includes an example of how to do this with an Execute POST API request using the curl command:\n\n```\ncurl -X POST -H x-dune-api-key:{{api_key}} \"https://api.dune.com/api/v1/query/{{query_id}}/execute\"\n```\n\nOverall, this guide is essential for developers working on the Dune app who need to authenticate API requests. It provides clear instructions on how to do so and emphasizes the importance of keeping API keys secure.",
      "questions": "1. What type of authentication does the Dune API use?\n- The Dune API uses API keys to authenticate requests.\n\n2. What is the purpose of the \"x-dune-api-key\" property in the request header?\n- The \"x-dune-api-key\" property is used for authentication with the API and is needed on all request types.\n\n3. What is the recommended practice for handling secret API keys?\n- The recommended practice is to not share secret API keys in publicly accessible areas such as GitHub or client-side code."
    },
    {
      "fileName": "cancel-execution.md",
      "filePath": "docs/api/api-reference/cancel-execution.md",
      "url": "https://dune.com/docs/api/api-reference/cancel-execution.md",
      "summary": "# Explanation of the App Technical Guide\n\nThe app technical guide is a documentation for the Dune API execution requests cancellation feature. The guide is divided into several sections that provide information on how to cancel an API execution request. \n\nThe first section is the title, which is \"Cancel Execution\". This section provides a brief overview of what the guide is about. The description section follows, which explains how to cancel Dune API execution requests. \n\nThe next section is the POST Cancel Execution header. This section provides information on how to cancel an API execution request. It explains that the user needs to pass the `execution_id` obtained from making an Execute Query ID POST request to complete a Cancel Execution API request. \n\nThe Arguments section follows, which explains that there are no arguments required to cancel an API execution request. The Returns section explains that the API returns a boolean for whether the execution is successfully canceled. \n\nThe Example Request section provides an example of how to cancel an API execution request using the `execution_id`. The section provides a URL and a cURL command that can be used to cancel an API execution request. \n\nThe Example Response section provides an example of the response that the user will receive after canceling an API execution request. The response is delivered in JSON format and contains a boolean value that indicates whether the request to cancel the query execution was made successfully. \n\nIn summary, the app technical guide provides a step-by-step guide on how to cancel Dune API execution requests. It explains the arguments required, the returns, and provides examples of how to make a request and the response that the user will receive.",
      "questions": "1. What is the purpose of the Dune API and how does it relate to blockchain technology?\n- The app technical guide does not provide information on the purpose of the Dune API or its relation to blockchain technology.\n\n2. Can the Cancel Execution API request be used to cancel multiple execution requests at once?\n- The app technical guide does not provide information on whether the Cancel Execution API request can be used to cancel multiple execution requests at once.\n\n3. Is there a limit to the number of execution requests that can be canceled using the Cancel Execution API request?\n- The app technical guide does not provide information on whether there is a limit to the number of execution requests that can be canceled using the Cancel Execution API request."
    },
    {
      "fileName": "errors.md",
      "filePath": "docs/api/api-reference/errors.md",
      "url": "https://dune.com/docs/api/api-reference/errors.md",
      "summary": "This app technical guide covers how to handle errors that may come up when working with the Dune API. The guide is divided into two main sections: \"Invalid API Key\" and \"An Internal Error Occurred\". Each section provides a response object and a list of checks to help users troubleshoot the error. \n\nThe \"Invalid API Key\" section provides a response object of `{'error': 'invalid API Key'}` and two checks to help users resolve the error. The first check is to ensure that the API key is being passed to the endpoint in a header, as described in the Authentication section of the API reference. The second check is to ensure that the API key is correctly entered. \n\nThe \"An Internal Error Occurred\" section provides a response object of `{'error': 'An internal error occurred'}` and two checks to help users resolve the error. The first check is to ensure that the `query_id` entered for GET endpoints is correct, while the second check is to ensure that the `execution_id` obtained from a GET endpoint is correctly passed on to a POST endpoint. \n\nThe guide also includes a note that if users find the guide too technical or confusing, they can reach out to the Dune API team on the #dune-api Discord channel for support. \n\nOverall, this guide is a helpful resource for users of the Dune API who may encounter errors while working with the API. The guide provides clear response objects and actionable steps to help users troubleshoot and resolve errors.",
      "questions": "1. What is the Dune API and how does it relate to blockchain technology?\n- The app technical guide does not provide information on what the Dune API is or how it relates to blockchain technology.\n\n2. Are there any specific error codes related to blockchain transactions or smart contracts?\n- The app technical guide does not provide information on specific error codes related to blockchain transactions or smart contracts.\n\n3. Is there any information on how to troubleshoot errors related to data retrieval from the blockchain?\n- The app technical guide provides some information on how to troubleshoot errors related to data retrieval from the Dune API, but it is not clear if this data is specifically related to the blockchain."
    },
    {
      "fileName": "execute-query-id.md",
      "filePath": "docs/api/api-reference/execute-query-id.md",
      "url": "https://dune.com/docs/api/api-reference/execute-query-id.md",
      "summary": "# Explanation of the Dune Docs App Technical Guide\n\n## Execute Query ID\n\nThis section of the guide explains how to execute a query with or without parameters to retrieve data. The guide is focused on the `query` folder of the project. \n\n### [POST] Execute Query ID\n\nThis header explains that the method to execute a query is a POST request. \n\n### Arguments\n\nThis section explains that no arguments are required to execute a query. However, it is possible to add query parameters to the request. An example of how to add query parameters is provided in the guide. \n\n### Returns\n\nThis section explains that the API returns an `execution_id` for the specified request. \n\n### Example Request\n\nThis section provides an example of how to make a request to execute a query. The example shows the URL to use for the request. \n\n#### cURL\n\nThis section provides an example of how to make a request using cURL. The example shows the command to use for the request. \n\n#### cURL with Parameters\n\nThis section provides an example of how to make a request with query parameters using cURL. The example shows the command to use for the request. \n\n### Example Response\n\nThis section provides an example of the response that the API returns when a query is executed. The response is delivered in JSON format and contains an `execution_id` and a `state`. The `execution_id` is a unique ID that is generated every time the API is called. The `state` is the current state of the query's execution. \n\nOverall, this guide provides a step-by-step explanation of how to execute a query with or without parameters to retrieve data. It also provides examples of how to make requests and what responses to expect.",
      "questions": "1. What is the purpose of the `execution_id` returned by the API?\n   \n   The `execution_id` is a unique ID generated every time the API is called, which can be saved and passed on to other API endpoints.\n\n2. Can this API be used to execute queries on a blockchain database?\n   \n   The technical guide does not provide information on whether this API can be used to execute queries on a blockchain database or not.\n\n3. Are there any limitations on the size or complexity of the queries that can be executed using this API?\n   \n   The technical guide does not provide information on any limitations on the size or complexity of the queries that can be executed using this API."
    },
    {
      "fileName": "execution-results.md",
      "filePath": "docs/api/api-reference/execution-results.md",
      "url": "https://dune.com/docs/api/api-reference/execution-results.md",
      "summary": "This technical guide provides information on how to obtain the results data of an execution request in the Dune Docs project. The guide is focused on the Execution Results API feature of the app. The guide provides details on how to make a GET request to the API endpoint to retrieve the status, metadata, and query results from a query execution. \n\nThe guide provides an example request that requires passing the `execution_id` obtained from making an Execute Query ID POST request. The guide also provides an example cURL request. The guide further provides an example response in JSON format, which includes details such as the execution ID, query ID, state, submitted time, execution start and end times, and the actual rows of data being returned. The metadata of the queried data being returned is also included in the response. The metadata includes details such as the names of the columns in the data returned, the size of the returned data, the number of rows in the data, the total number of datapoints returned, the time it took to assign a slot in the server for the request, and the time it took for the actual execution of the query with the request. \n\nThe guide also provides an example of how to get the results in CSV format by appending \"/csv\" to the URL pattern. The guide advises against using the API key as a parameter in public documents where the API key can be viewed and compromised. \n\nFinally, the guide provides a FAQ section that answers questions such as whether data can be ingested by getting a direct connection to the database, whether query results data are saved for faster retrieval, how long the results data from an execution are stored for, and how much data can be retrieved in a single API result call. \n\nIn summary, this technical guide provides developers with a detailed explanation of how to obtain the results data of an execution request in the Dune Docs project. The guide provides examples of requests and responses, as well as a FAQ section that answers common questions.",
      "questions": "1. What is the purpose of the Dune Docs app and how does it relate to blockchain technology?\n- The app technical guide does not provide information on the overall purpose of the Dune Docs app, so a blockchain SQL analyst may need to seek additional documentation or context to understand how it relates to blockchain technology.\n\n2. How does the Dune Docs app handle security and authentication for API requests?\n- The app technical guide does not provide information on security and authentication measures for API requests, so a blockchain SQL analyst may need to seek additional documentation or context to understand how the app handles these aspects.\n\n3. What is the pricing model for using the Dune Docs app and how does it compare to other blockchain data analysis tools?\n- The app technical guide does not provide information on the pricing model for using the Dune Docs app, so a blockchain SQL analyst may need to seek additional documentation or context to understand the costs associated with using the app and how it compares to other blockchain data analysis tools."
    },
    {
      "fileName": "execution-status.md",
      "filePath": "docs/api/api-reference/execution-status.md",
      "url": "https://dune.com/docs/api/api-reference/execution-status.md",
      "summary": "# Explanation of Execution Status App Technical Guide\n\nThe Execution Status technical guide is a part of the Dune Docs project and provides information on how to check the status of an execution request. The guide is located in the app folder of the project and is focused on the app feature that allows users to execute queries and check their status. \n\nThe guide provides a detailed explanation of how to use the GET Execution Status API request to check the status of a query execution. It includes information on the arguments and returns of the API request, as well as an example request and response. \n\nThe Arguments section of the guide explains that there are no arguments required for the Execution Status API request. The Returns section explains that the API request returns the status of a query execution along with relevant metadata of the results if the execution is completed. \n\nThe Example Request section provides an example of how to pass the execution_id obtained from making an Execute Query ID POST request to complete an Execution Status API request. It includes both a URL and cURL example. \n\nThe Example Response section provides two examples of JSON responses that can be returned by the Execution Status API request. The first example shows the response when the query is still executing, while the second example shows the response when the execution is complete. The section also provides a detailed explanation of the different properties of the response data, such as execution_id, query_id, state, submitted_at, expires_at, execution_started_at, execution_ended_at, and result_metadata. \n\nFinally, the Check Execution Status FAQ section provides answers to common questions about the different states of query execution, such as \"Executing\" and \"Pending\". It also provides a list of all status codes for reference. \n\nOverall, the Execution Status technical guide provides a comprehensive explanation of how to check the status of a query execution using the Execution Status API request. It is a useful resource for developers working on the Dune Docs project who need to understand how to use this feature of the app.",
      "questions": "1. What is the purpose of this API and how does it relate to blockchain technology?\n   - This API is used to check the status of a query execution request. It is not directly related to blockchain technology, but it may be used in conjunction with blockchain data analysis.\n2. What authentication is required to make requests to this API?\n   - The cURL example shows that an API key is required to make requests to this API. A blockchain SQL analyst may want to know how to obtain an API key and what level of access it provides.\n3. What is the maximum size of the response data that can be generated with this request?\n   - The `result_set_bytes` property in the `result_metadata` object indicates the size of the response data in bytes, but it does not specify a maximum size. A blockchain SQL analyst may want to know if there are any limitations on the amount of data that can be returned by this API."
    },
    {
      "fileName": "index.md",
      "filePath": "docs/api/api-reference/index.md",
      "url": "https://dune.com/docs/api/api-reference/index.md",
      "summary": "# API Reference\n\nThis section of the Dune Docs project covers the API endpoints and common errors that may occur when using them. The purpose of this guide is to provide developers with a comprehensive understanding of the API and how to use it effectively.\n\nThe guide is divided into several sections, each covering a specific aspect of the API. These sections include:\n\n- **Authentication**: This section covers the authentication process for accessing the API. It provides information on how to obtain an API key and how to use it to authenticate requests.\n\n- **Execute Query ID**: This section covers the endpoint for executing a query by ID. It provides information on the parameters required for this endpoint and the expected response.\n\n- **Execution Status**: This section covers the endpoint for checking the status of a query execution. It provides information on the parameters required for this endpoint and the expected response.\n\n- **Execution Results**: This section covers the endpoint for retrieving the results of a query execution. It provides information on the parameters required for this endpoint and the expected response.\n\n- **Cancel Execution**: This section covers the endpoint for canceling a query execution. It provides information on the parameters required for this endpoint and the expected response.\n\n- **Error Codes**: This section covers the error codes that may be returned by the API. It provides information on what each error code means and how to handle it.\n\nEach section provides a detailed explanation of the endpoint or error code, including any required parameters and expected responses. The guide also includes links to the relevant files for each section.\n\nFor example, the **Authentication** section links to the `authentication.md` file in the `api-reference` folder, which provides more detailed information on the authentication process.\n\nOverall, this API Reference guide is an essential resource for developers working with the Dune Docs API. It provides a comprehensive understanding of the API endpoints and common errors, helping developers to use the API effectively and troubleshoot any issues that may arise.",
      "questions": "1. What type of data is being accessed through the API endpoints listed in this technical guide?\n- The technical guide does not provide information on the type of data being accessed through the API endpoints listed. \n\n2. Are there any security measures in place to protect the data being accessed through the API endpoints?\n- The technical guide does not provide information on security measures in place to protect the data being accessed through the API endpoints. \n\n3. Is there any information on how the API endpoints interact with a blockchain or SQL database?\n- The technical guide does not provide information on how the API endpoints interact with a blockchain or SQL database."
    }
  ],
  "folders": [],
  "summary": "The `docs/api/api-reference` folder contains a collection of technical guides that provide comprehensive information on various aspects of the Dune API. These guides are essential for developers working with the Dune Docs project, as they offer detailed explanations, examples, and troubleshooting tips for using the API effectively.\n\nThe **Authentication** guide (`authentication.md`) focuses on the process of authenticating API requests in the Dune app. It highlights the importance of API keys and provides a method for adding the \"x-dune-api-key\" property to the request header. This guide is crucial for developers who need to authenticate API requests and ensure the security of their API keys.\n\nThe **Cancel Execution** guide (`cancel-execution.md`) explains how to cancel Dune API execution requests. It provides information on passing the `execution_id` and the expected response when canceling an execution. This guide is useful for developers who need to manage and cancel API execution requests.\n\nThe **Errors** guide (`errors.md`) covers handling errors that may occur when working with the Dune API. It provides response objects and troubleshooting steps for common errors, such as \"Invalid API Key\" and \"An Internal Error Occurred\". This guide is a valuable resource for users who encounter errors while working with the API.\n\nThe **Execute Query ID** guide (`execute-query-id.md`) explains how to execute a query with or without parameters to retrieve data. It provides examples of making requests and the expected responses, making it a helpful resource for developers who need to execute queries using the Dune API.\n\nThe **Execution Results** guide (`execution-results.md`) provides information on obtaining the results data of an execution request. It offers details on making a GET request to the API endpoint and the expected response, including metadata and query results. This guide is essential for developers who need to retrieve execution results from the Dune API.\n\nThe **Execution Status** guide (`execution-status.md`) focuses on checking the status of an execution request. It explains how to use the GET Execution Status API request and provides examples of requests and responses. This guide is useful for developers who need to monitor the progress of their query executions.\n\nFinally, the **Index** guide (`index.md`) serves as an overview of the API Reference, covering the API endpoints and common errors. It provides a concise summary of each section in the API Reference, making it a helpful starting point for developers exploring the Dune API.\n\nOverall, the guides in this folder are essential resources for developers working with the Dune Docs API. They provide a comprehensive understanding of the API endpoints, common errors, and best practices, helping developers use the API effectively and troubleshoot any issues that may arise.",
  "questions": ""
}