{
  "fileName": "community-clients.md",
  "filePath": "docs/api/quick-start/community-clients.md",
  "url": "https://dune.com/docs/api/quick-start/community-clients.md",
  "summary": "# Community Clients\n\nThis section of the Dune Docs project provides a list of Dune API clients built by the community. The purpose of this guide is to showcase the work of the community and provide information on how to use these clients. \n\nThe guide starts with a warning disclaimer that the clients listed are not directly maintained by the Dune team. This is important information for users to be aware of before using any of the clients listed. \n\nThe guide then proceeds to list the API clients built by the community. Each client is described in detail, including the name of the client, the person or team who built it, and where it can be found. \n\nFor example, the Cow Protocol Python Client was built by [@bh2smith](https://dune.com/bh2smith) and the team at [Cow Protocol](https://dune.com/cowprotocol). It can be found on [PyPi](https://pypi.org/project/dune-client/). The guide provides a simple pip install command to get started quickly and a link to the client's GitHub page for more information. \n\nSimilarly, the Cow Protocol Typescript Client was also built by [@bh2smith](https://dune.com/bh2smith) and can be found on [npm](https://www.npmjs.com/package/@cowprotocol/ts-dune-client). The guide provides an example of how to install it using yarn. \n\nThe guide also lists a Go client built by Dune team member [@theedgeofrage](https://dune.com/theedgeofrage) and a Ruby client built by [@shellandbull](https://github.com/shellandbull). \n\nOverall, this guide provides valuable information for users who want to use Dune API clients built by the community. It showcases the work of the community and provides instructions on how to use these clients.",
  "questions": "1. What is the purpose of the Dune API clients listed in this technical guide?\n- The purpose of the Dune API clients is not explicitly stated in the technical guide, but it appears that they are built by the community to interact with the Dune API.\n\n2. Who maintains the Dune API clients listed in this technical guide?\n- The Dune team does not directly maintain the API clients listed in this technical guide. \n\n3. What programming languages are the Dune API clients built in?\n- The Dune API clients listed in this technical guide are built in Python, TypeScript, Go, and Ruby."
}