{
  "fileName": "values.md",
  "filePath": "docs/query/DuneSQL-reference/SQL-statement-syntax/values.md",
  "url": "https://dune.com/docs/query/DuneSQL-reference/SQL-statement-syntax/values.md",
  "summary": "## `VALUES`\n\nThe `VALUES` header defines a literal inline table. It can be used anywhere a query can be used, such as the `FROM` clause of a `SELECT` statement, an `INSERT` statement, or even at the top level. `VALUES` creates an anonymous table without column names, but the table and columns can be named using an `AS` clause with column aliases.\n\nThe `VALUES` header is located in the `query` folder of the project, which suggests that it is a part of the query functionality of the app. The examples provided in the guide show how to use the `VALUES` header to return a table with one or more columns and rows, select columns from the table, and create a new table with columns and data from the `VALUES` table.\n\nThe `VALUES` header is followed by a `Synopsis` section that provides the syntax for using the header. The `Description` section provides a detailed explanation of what the header does and how it works. The `Examples` section provides examples of how to use the header in different scenarios. Finally, the `See also` section provides links to other related headers in the project, such as `INSERT` and `SELECT`.\n\nOverall, the `VALUES` header is a useful tool for creating tables with specific data and columns, and it can be used in a variety of contexts within the app.",
  "questions": "1. What is the purpose of the `VALUES` function in the context of a blockchain SQL database?\n- Answer: A blockchain SQL analyst might want to know how the `VALUES` function can be used to create and manipulate tables in a blockchain SQL database.\n\n2. Can the `VALUES` function be used to insert data into an existing table in a blockchain SQL database?\n- Answer: A blockchain SQL analyst might want to know if the `VALUES` function can be used to insert data into an existing table in a blockchain SQL database, or if it can only be used to create new tables.\n\n3. Are there any limitations to the size or complexity of the tables that can be created using the `VALUES` function in a blockchain SQL database?\n- Answer: A blockchain SQL analyst might want to know if there are any limitations to the size or complexity of the tables that can be created using the `VALUES` function in a blockchain SQL database, or if there are any performance considerations to keep in mind when using this function."
}