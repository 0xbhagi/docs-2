{
  "fileName": "show-columns.md",
  "filePath": "docs/query/DuneSQL-reference/SQL-statement-syntax/show-columns.md",
  "url": "https://dune.com/docs/query/DuneSQL-reference/SQL-statement-syntax/show-columns.md",
  "summary": "The `SHOW COLUMNS` section of the app technical guide covers the functionality of listing the columns in a specified table, along with their data type and other attributes. This feature is located in the `query` section of the project app. \n\nThe `Synopsis` section provides the syntax for using this feature, which includes the `SHOW COLUMNS` command followed by the name of the table to be queried. An optional `LIKE` clause can also be included to filter the results based on a specified pattern. \n\nThe `Description` section provides further details on how to use the `LIKE` clause to filter the results. An example query is provided to demonstrate how to find columns ending in `key` using the `LIKE` clause. \n\nOverall, this section of the app technical guide serves as a reference for developers who need to retrieve information about the columns in a specific table. The `SHOW COLUMNS` feature can be useful for debugging and troubleshooting, as well as for gaining a better understanding of the structure of a database.",
  "questions": "1. What is the purpose of the `SHOW COLUMNS` command in the context of a blockchain application?\n- A blockchain SQL analyst might want to know how this command is used in the specific context of the dune docs project and how it relates to the blockchain data being analyzed.\n\n2. Can the `LIKE` pattern be used to filter columns based on specific blockchain data attributes?\n- The analyst might want to know if the `LIKE` pattern can be used to filter columns based on specific blockchain data attributes, such as transaction ID or block height.\n\n3. Are there any limitations or considerations when using the `SHOW COLUMNS` command with blockchain data?\n- The analyst might want to know if there are any limitations or considerations when using the `SHOW COLUMNS` command with blockchain data, such as potential performance issues or compatibility with different blockchain platforms."
}