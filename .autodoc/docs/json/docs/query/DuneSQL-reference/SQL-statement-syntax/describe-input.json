{
  "fileName": "describe-input.md",
  "filePath": "docs/query/DuneSQL-reference/SQL-statement-syntax/describe-input.md",
  "url": "https://dune.com/docs/query/DuneSQL-reference/SQL-statement-syntax/describe-input.md",
  "summary": "## `DESCRIBE INPUT`\n\nThe `DESCRIBE INPUT` statement is used to list the input parameters of a prepared statement along with the position and type of each parameter. This statement is useful when you need to know the types of the parameters in a prepared statement, especially when some of the parameter types cannot be determined.\n\nThe `DESCRIBE INPUT` statement takes the name of the prepared statement as its argument. The output of the statement is a table that shows the position and type of each parameter in the prepared statement. If a parameter type cannot be determined, it will appear as `unknown`.\n\n### Examples\n\n#### Example 1\n\nIn this example, we prepare a query with three parameters and then describe the input parameters of the prepared statement using `DESCRIBE INPUT`.\n\n``` sql\nPREPARE my_select1 FROM\nSELECT ? FROM nation WHERE regionkey = ? AND name < ?;\n```\n\n``` sql\nDESCRIBE INPUT my_select1;\n```\n\nThe output of the `DESCRIBE INPUT` statement will be:\n\n``` text\nPosition | Type\n--------------------\n       0 | unknown\n       1 | bigint\n       2 | varchar\n(3 rows)\n```\n\nThis output shows that the prepared statement `my_select1` has three input parameters. The first parameter has an unknown type, while the second parameter is of type `bigint` and the third parameter is of type `varchar`.\n\n#### Example 2\n\nIn this example, we prepare a query with no parameters and then describe the input parameters of the prepared statement using `DESCRIBE INPUT`.\n\n``` sql\nPREPARE my_select2 FROM\nSELECT * FROM nation;\n```\n\n``` sql\nDESCRIBE INPUT my_select2;\n```\n\nThe output of the `DESCRIBE INPUT` statement will be:\n\n``` text\nPosition | Type\n-----------------\n(0 rows)\n```\n\nThis output shows that the prepared statement `my_select2` has no input parameters.\n\n### See also\n\n- `PREPARE`: prepares a statement for execution.",
  "questions": "1. What is the purpose of the `DESCRIBE INPUT` statement in the context of a blockchain SQL database?\n- A blockchain SQL analyst might want to know how to use the `DESCRIBE INPUT` statement to list the input parameters of a prepared statement and their types, which can be useful for debugging and optimizing blockchain queries.\n\n2. How does the `DESCRIBE INPUT` statement handle unknown parameter types?\n- A blockchain SQL analyst might want to know how the `DESCRIBE INPUT` statement handles unknown parameter types, which are listed as `unknown` in the output.\n\n3. Are there any other related SQL statements or functions that a blockchain SQL analyst should be aware of when working with prepared statements?\n- A blockchain SQL analyst might want to know if there are any other related SQL statements or functions that work with prepared statements, such as the `prepare` statement mentioned in the \"See also\" section."
}