{
  "fileName": "setdigest.md",
  "filePath": "docs/query/DuneSQL-reference/Functions-and-operators/setdigest.md",
  "url": "https://dune.com/docs/query/DuneSQL-reference/Functions-and-operators/setdigest.md",
  "summary": "# Set Digest functions\n\nThis guide explains the Set Digest functions offered by Trino, which are used to estimate the Jaccard similarity coefficient between two sets. The MinHash technique is used to achieve this, which is commonly used in data mining to detect near-duplicate web pages at scale. The guide provides an example of how the Set Digest functions can be used to estimate the similarity between texts. The input texts are split using the function `ngrams` to 4-shingles, which are used as input for creating a set digest of each initial text. The set digests are compared to each other to get an approximation of the similarity of their corresponding initial texts. The guide also explains the data structures used by Trino to implement Set Digest data sketches, which include HyperLogLog and MinHash with a single hash function. The HyperLogLog structure is used for the approximation of the distinct elements in the original set, while the MinHash structure is used to store a low memory footprint signature of the original set. The Trino type for this data structure is called `setdigest`. Trino offers the ability to merge multiple Set Digest data sketches. The guide also explains how data sketches can be serialized to and deserialized from `varbinary`, allowing them to be stored for later use. \n\nThe guide provides examples of the functions offered by Trino for Set Digest, including `make_set_digest()`, `merge_set_digest()`, `intersection_cardinality()`, `jaccard_index()`, and `hash_counts()`. The `make_set_digest()` function composes all input values of `x` into a `setdigest`. The `merge_set_digest()` function returns the `setdigest` of the aggregate union of the individual `setdigest` Set Digest structures. The `intersection_cardinality()` function returns the estimation for the cardinality of the intersection of the two set digests. The `jaccard_index()` function returns the estimation of Jaccard index for the two set digests. The `hash_counts()` function returns a map containing the Murmur3Hash128 hashed values and the count of their occurrences within the internal MinHash structure belonging to `x`. \n\nOverall, this guide provides a detailed explanation of the Set Digest functions offered by Trino, including their data structures and functions. The guide also provides examples of how these functions can be used to estimate the similarity between texts.",
  "questions": "1. What is the purpose of the Set Digest functions in Trino and how are they used in data mining? \n   - The Set Digest functions in Trino are used to estimate the Jaccard similarity coefficient between two sets using the MinHash technique. They are commonly used in data mining to detect near-duplicate web pages at scale.\n2. What data structures are used in Trino to implement Set Digest data sketches? \n   - Trino implements Set Digest data sketches using HyperLogLog and MinHash with a single hash function. The HyperLogLog structure is used for the approximation of the distinct elements in the original set, while the MinHash structure is used to store a low memory footprint signature of the original set.\n3. What are some examples of functions available in Trino for working with Set Digest data sketches? \n   - Trino offers several functions for working with Set Digest data sketches, including make_set_digest(), merge_set_digest(), intersection_cardinality(), jaccard_index(), and hash_counts(). These functions can be used to create a setdigest, merge multiple Set Digest data sketches, estimate the cardinality of the intersection of two set digests, estimate the Jaccard index for two set digests, and return a map containing the hashed values and count of their occurrences within the internal MinHash structure belonging to a setdigest."
}