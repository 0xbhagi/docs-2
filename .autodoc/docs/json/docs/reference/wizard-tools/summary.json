{
  "folderName": "wizard-tools",
  "folderPath": ".autodoc\\docs\\json\\docs\\reference\\wizard-tools",
  "url": "https://dune.com/tree/master/doc\\docs\\json\\docs\\reference\\wizard-tools",
  "files": [
    {
      "fileName": "blockchain-explorers.md",
      "filePath": "docs\\reference\\wizard-tools\\blockchain-explorers.md",
      "url": "https://dune.com/blob/master/reference\\wizard-tools\\blockchain-explorers.md",
      "summary": "# Blockchain Explorers\n\nThis technical guide provides an overview of Blockchain Explorers, which are essential tools for Data Analysts/Scientists. The guide explains that Blockchain Explorers allow users to explore a blockchain by providing an online interface to retrieve data about transactions, addresses, blocks, and fees, among others. \n\nThe guide lists the primary web-based explorers for the most popular blockchains, including Ethereum, Solana, Arbitrum, Polygon, Optimism, Avalanche C-Chain, Binance Smart Chain, and Gnosis Chain. Each blockchain is accompanied by a link to its respective explorer. \n\nThe guide emphasizes that while Blockchain Explorers may not offer the same level of functionality as Dune, they are indispensable for understanding how certain protocols work and what data is required for queries. \n\nFor example, the Ethereum blockchain is explored using Etherscan, which provides a comprehensive view of the Ethereum network, including real-time data on transactions, blocks, and addresses. Similarly, Solscan is used to explore the Solana blockchain, while Arbiscan is used for the Arbitrum blockchain. \n\nOverall, this technical guide provides a useful introduction to Blockchain Explorers and their importance in the world of data analysis and science.",
      "questions": "1. What is the purpose of this app and how does it relate to blockchain data analysis?\n- The app is a collection of web-based blockchain explorers for popular blockchains, which allow data analysts/scientists to retrieve information about transactions, addresses, blocks, and fees. \n\n2. Are there any other blockchains that this app supports besides the ones listed?\n- The app only lists the primary web-based explorers for the most popular blockchains, so it's possible that there are other blockchains not included in this list. \n\n3. Does this app provide any tools or features beyond just retrieving blockchain data?\n- The app does not provide any tools or features beyond retrieving blockchain data, but it is noted that the explorers listed are not as comprehensive as the Dune platform."
    },
    {
      "fileName": "helpful-dashboards.md",
      "filePath": "docs\\reference\\wizard-tools\\helpful-dashboards.md",
      "url": "https://dune.com/blob/master/reference\\wizard-tools\\helpful-dashboards.md",
      "summary": "# Helpful Dashboards\n\nThis technical guide is focused on the app folder of the Dune Docs project. The guide provides a list of helpful dashboards for those looking to learn new Dune, Data Analytics, and Blockchain Analysis skills. The dashboards are divided into two categories: Tutorial Dashboards and Reference Dashboards.\n\nThe Tutorial Dashboards are great for learning new skills. The dashboards include Tips and Tricks for Dune V2 Queries and Visualizations, Data Visualization Cheat Sheet, Event and Function Signature Sleuthing, Getting Started, and Contract Quickstart. Each dashboard is created by a different user and provides a unique perspective on learning Dune.\n\nThe Reference Dashboards are helpful to refer to while building Queries. The dashboards include Meta Monitoring, Is my Contract Decoded Yet?, and Dune DB Guide. These dashboards are created by different users and provide a reference point for building queries.\n\nThe technical guide also provides a link to submit a GitHub Pull Request for any other dashboard that is helpful. If the dashboard is deemed helpful, it will be added to the list.\n\nFor example, if a user is looking to learn Dune V2 Queries and Visualizations, they can refer to the Tips and Tricks for Dune V2 Queries and Visualizations dashboard created by @springzhang. This dashboard provides tips and tricks for creating queries and visualizations in Dune V2.\n\nOverall, this technical guide provides a list of helpful dashboards for those looking to learn Dune, Data Analytics, and Blockchain Analysis skills. The dashboards are created by different users and provide a unique perspective on learning Dune.",
      "questions": "1. What is the purpose of the Dune Docs app?\n   \n   The app is not clearly defined in this technical guide, so a blockchain SQL analyst might have to look for additional documentation or context to understand the app's purpose.\n\n2. What kind of data analytics and blockchain analysis skills can be learned from the tutorial dashboards?\n   \n   The technical guide mentions that the tutorial dashboards are great for learning new Dune, Data Analytics, and Blockchain Analysis skills, but it does not provide specific examples or details about what those skills might be.\n\n3. How can a user submit a new dashboard to be added to the list?\n   \n   The technical guide mentions that users can submit a GitHub Pull Request to add a new dashboard to the list, but a blockchain SQL analyst might want more information on the submission process, such as what kind of criteria the Dune Analytics team uses to determine if a dashboard is helpful enough to be added to the list."
    },
    {
      "fileName": "index.md",
      "filePath": "docs\\reference\\wizard-tools\\index.md",
      "url": "https://dune.com/blob/master/reference\\wizard-tools\\index.md",
      "summary": "# Wizard Tools\n\nThis section of the app technical guide provides a list of non-Dune tools that the wizards use to make their work easier. The tools listed here are useful for learning how each ERC-xxx standard works, understanding the current crypto data ecosystem, auditing smart contracts, and digging into smart contracts to understand how they operate and their data structure. \n\nSome of the tools listed in this section include OpenZepplin's ERC-xxx Standards Docs, which are helpful for learning how each ERC-xxx standard works. The EVM Handbook is a curated list of EVM resources for aspiring blockchain data analysts. Solidity Visual Developer for VS Code is a helpful suite of tools for smart contract auditing inside of VS code. Deth.net is a set of Ethereum developer tools that help with blockchain data sleuthing. ZK Zhao's map of the Crypto Data Landscape is helpful for getting a sense of the current crypto data ecosystem. \n\nThe section also includes links to recommended reading lists for a bunch of guides on crypto data topics and projects to check out. DeepDAO provides stats on DAOs and their treasuries. DethCode lets you go into an Ethereum smart contract's code to read the comments or the actual logic can help to understand the smart contract's emitted data. Sidekik is useful for digging into smart contracts to understand how they operate and their data structure. Ethernaut is a wargame where you \"hack\" a set of smart contracts, useful for learning how smart contracts work. Advanced Ethereum Mini Courses are a good resource for understanding how theory applies to practice. \n\nOverall, this section of the app technical guide provides a comprehensive list of tools that can be used to make the work of the wizards easier. The tools listed here are useful for anyone who wants to learn more about blockchain data analysis, smart contract auditing, and the current crypto data ecosystem.",
      "questions": "1. What is the purpose of this app and how does it relate to blockchain technology?\n- The app technical guide provides a list of non-Dune tools that can be used by blockchain data analysts to understand and work with smart contracts and Ethereum transactions.\n\n2. Are there any specific tools listed that are particularly useful for analyzing blockchain data using SQL?\n- It is not explicitly stated in the app technical guide which tools are specifically useful for analyzing blockchain data using SQL.\n\n3. Are there any limitations or potential issues with using these tools for blockchain data analysis?\n- The app technical guide does not provide any information on limitations or potential issues with using these tools for blockchain data analysis."
    },
    {
      "fileName": "utility-queries.md",
      "filePath": "docs\\reference\\wizard-tools\\utility-queries.md",
      "url": "https://dune.com/blob/master/reference\\wizard-tools\\utility-queries.md",
      "summary": "# Utility Queries\n\nThis section of the Dune Docs project provides a list of queries that can help users build their own queries. The queries are organized in a table that includes the name/link and tag of each query. Users can propose changes to the list by following the link provided.\n\nThe queries listed in this section are focused on decoding contracts, starting points for queries, and NFTs. For example, the \"Is my Contract decoded yet\" queries by @0xBoxer and @chenxiangli are focused on decoding contracts on different networks (Ethereum, Polygon, xDAI, and BSC). These queries can be used to check if a contract has been decoded yet, which can be useful for developers who want to analyze the contract's data.\n\nThe queries by @ilemi are focused on providing starting points for queries related to common event signatures, functions called by signers, and functions called in traces for a contract. These queries can be used as a foundation for more complex queries that require this information.\n\nFinally, the query by @ilemi for getting all NFTs held by an address (ERC721 + ERC1155) is focused on NFTs. This query can be used to retrieve information about the NFTs held by a specific address, which can be useful for analyzing NFT markets.\n\nOverall, this section of the Dune Docs project provides a useful list of queries that can help users build their own queries. The queries are focused on decoding contracts, starting points for queries, and NFTs, and can be used as a foundation for more complex queries.",
      "questions": "1. What is the purpose of the Dune Docs app and how does it relate to blockchain SQL analysis?\n- The Dune Docs app provides a list of utility queries that can be used as starting points for building queries related to blockchain data analysis using SQL.\n2. How can a user propose changes or additions to the list of utility queries?\n- A user can propose changes or additions to the list of utility queries by clicking on the provided link to the app's GitHub repository and submitting a pull request.\n3. What types of blockchain data analysis can be performed using the utility queries provided in the app?\n- The utility queries provided in the app can be used for decoding contracts, finding common event signatures and functions called, retrieving NFTs held by an address, and getting addresses from ENS."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc\\docs\\json\\docs\\reference\\wizard-tools` folder contains a collection of technical guides that focus on providing resources, tools, and examples to help users better understand and utilize the Dune Docs project. These guides cover various aspects of the project, such as Blockchain Explorers, Helpful Dashboards, Wizard Tools, and Utility Queries.\n\nThe `blockchain-explorers.md` guide offers an overview of Blockchain Explorers, which are essential tools for Data Analysts/Scientists. It lists the primary web-based explorers for popular blockchains and emphasizes their importance in understanding how certain protocols work and what data is required for queries. For instance, Etherscan is used to explore the Ethereum blockchain, providing real-time data on transactions, blocks, and addresses.\n\nThe `helpful-dashboards.md` guide focuses on providing a list of helpful dashboards for users looking to learn new Dune, Data Analytics, and Blockchain Analysis skills. These dashboards are divided into Tutorial Dashboards and Reference Dashboards, each created by different users and offering unique perspectives on learning Dune. For example, the Tips and Tricks for Dune V2 Queries and Visualizations dashboard by @springzhang provides valuable insights for creating queries and visualizations in Dune V2.\n\nThe `index.md` guide lists non-Dune tools that wizards use to make their work easier. These tools are useful for learning how each ERC-xxx standard works, understanding the current crypto data ecosystem, auditing smart contracts, and digging into smart contracts to understand their operation and data structure. Some of the tools mentioned include OpenZepplin's ERC-xxx Standards Docs, EVM Handbook, Solidity Visual Developer for VS Code, Deth.net, and ZK Zhao's map of the Crypto Data Landscape.\n\nThe `utility-queries.md` guide provides a list of queries that can help users build their own queries. These queries are focused on decoding contracts, starting points for queries, and NFTs. For example, the \"Is my Contract decoded yet\" queries by @0xBoxer and @chenxiangli are focused on decoding contracts on different networks, which can be useful for developers who want to analyze the contract's data.\n\nOverall, the guides in this folder offer valuable resources and tools for users to better understand and utilize the Dune Docs project. They provide a comprehensive collection of information that can be helpful for analysts who are curious about using the project and want to learn more about its various aspects.",
  "questions": ""
}