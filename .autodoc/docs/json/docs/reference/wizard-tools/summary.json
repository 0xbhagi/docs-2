{
  "folderName": "wizard-tools",
  "folderPath": ".autodoc/docs/json/docs/reference/wizard-tools",
  "url": "https://dune.com/.autodoc/docs/json/docs/reference/wizard-tools",
  "files": [
    {
      "fileName": "blockchain-explorers.md",
      "filePath": "docs/reference/wizard-tools/blockchain-explorers.md",
      "url": "https://dune.com/docs/reference/wizard-tools/blockchain-explorers.md",
      "summary": "# Blockchain Explorers\n\nThis section of the app technical guide covers the primary web-based explorers for the most popular blockchains. The purpose of this guide is to provide an overview of what blockchain explorers are and how they can be used by data analysts/scientists to explore a blockchain. \n\nThe guide explains that blockchain explorers provide an online interface for users to look up any particular blockchain of choice and retrieve data about transactions, addresses, blocks, and fees, amongst others. The guide then lists the primary web-based explorers for the most popular blockchains, including Ethereum, Solana, Arbitrum, Polygon, Optimism, Avalanche C-Chain, Binance Smart Chain, and Gnosis Chain. \n\nThe guide also highlights that while blockchain explorers won't let users do half of the cool things Dune does, they are indispensable for figuring out how certain protocols work and what data needs to be included in queries. \n\nExample: If a data analyst/scientist wants to explore the Ethereum blockchain, they can use the Etherscan explorer listed in the guide to retrieve data about transactions, addresses, blocks, and fees. \n\nOverall, this section of the app technical guide provides a useful overview of blockchain explorers and their importance for data analysts/scientists.",
      "questions": "1. What is the purpose of Blockchain Explorers?\n- Blockchain Explorers allow Data Analysts/Scientists to explore a blockchain by providing an online interface to retrieve data about transactions, addresses, blocks, and fees, amongst others.\n\n2. What are some of the popular blockchains that this app technical guide covers?\n- This app technical guide covers popular blockchains such as Ethereum, Solana, Arbitrum, Polygon, Optimism, Avalanche C-Chain, Binance Smart Chain, and Gnosis Chain.\n\n3. How does this app technical guide compare to Dune in terms of functionality?\n- The app technical guide acknowledges that while Blockchain Explorers won't let you do half of the cool things Dune does, they are indispensable for figuring out how certain protocols work and what data you need to include in your queries."
    },
    {
      "fileName": "helpful-dashboards.md",
      "filePath": "docs/reference/wizard-tools/helpful-dashboards.md",
      "url": "https://dune.com/docs/reference/wizard-tools/helpful-dashboards.md",
      "summary": "# Helpful Dashboards\n\nThis app technical guide covers a list of dashboards that are useful for those who want to learn Dune, Data Analytics, and Blockchain Analysis skills. The guide is divided into two sections: Tutorial Dashboards and Reference Dashboards.\n\nThe Tutorial Dashboards section contains dashboards that are great for learning new skills. The dashboards include Tips and Tricks for Dune V2 Queries and Visualizations, Data Visualization Cheat Sheet, Event and Function Signature Sleuthing, Getting Started, and Contract Quickstart. Each dashboard is created by a different user and provides a unique perspective on how to use Dune.\n\nThe Reference Dashboards section contains dashboards that are helpful to refer to while building queries. The dashboards include Meta Monitoring, Is my Contract Decoded Yet?, and Dune DB Guide. These dashboards provide useful information that can help users build queries more efficiently.\n\nThe guide also encourages users to submit their own dashboards by submitting a GitHub Pull Request. If the dashboard is helpful, it will be added to the list.\n\nOverall, this guide provides a list of dashboards that can help users learn Dune, Data Analytics, and Blockchain Analysis skills. It also provides a list of reference dashboards that can help users build queries more efficiently.",
      "questions": "1. What is the purpose of the Dune Docs app?\n- The app technical guide does not provide a clear answer to this question.\n\n2. What kind of data can be analyzed using the dashboards provided by Dune Docs?\n- The dashboards are designed for Dune, Data Analytics, and Blockchain Analysis skills.\n\n3. Can users contribute their own dashboards to the app?\n- Yes, users can submit their own dashboards via a GitHub Pull Request and if deemed helpful, they will be added to the list."
    },
    {
      "fileName": "index.md",
      "filePath": "docs/reference/wizard-tools/index.md",
      "url": "https://dune.com/docs/reference/wizard-tools/index.md",
      "summary": "# Wizard Tools\n\nThis section of the app technical guide covers some of the non-Dune tools that the wizards use to make their magic happen. The tools listed here are helpful for learning about ERC-xxx standards, EVM resources, smart contract auditing, blockchain data sleuthing, and more. \n\nSome of the tools listed include OpenZepplin's ERC-xxx Standards Docs, which are helpful for learning how each ERC-xxx standard works. The EVM Handbook is a curated list of EVM resources for aspiring blockchain data analysts. Solidity Visual Developer for VS Code is a helpful suite of tools for smart contract auditing inside of VS code. Deth.net is a set of Ethereum developer tools that help with blockchain data sleuthing. \n\nZK Zhao's map of the Crypto Data Landscape is helpful for getting a sense of the current crypto data ecosystem. His Chaininsight tool is pretty cool too, and could help you build the next trending dashboard before someone else does. \n\nOther tools listed include DeepDAO, which provides stats on DAOs and their treasuries, and DethCode, which lets you go into an Ethereum smart contract's code to read the comments or the actual logic to help understand the smart contract's emitted data. \n\nThere are also resources for learning about Solidity, such as freeCodeCamp's Learn Solidity Handbook and Ethernaut, a wargame where you \"hack\" a set of smart contracts. Advanced Ethereum Mini Courses assume you have an understanding of Solidity, React, Truffle, and Web3, but are a good resource for understanding how theory applies to practice. \n\nFinally, the Online Ethereum Transaction Decoder is a tool that can be used to decode Ethereum transactions. \n\nOverall, this section of the app technical guide provides a comprehensive list of tools and resources that can be used to learn about and work with Ethereum and smart contracts.",
      "questions": "1. What is the purpose of this app and how does it relate to blockchain technology?\n- The app is called \"Wizard Tools\" and provides a list of non-Dune tools that wizards use to make things. It is unclear how this app specifically relates to blockchain technology.\n\n2. Are there any tools listed that specifically relate to SQL analysis of blockchain data?\n- None of the tools listed in this app technical guide specifically relate to SQL analysis of blockchain data.\n\n3. Are there any resources listed that could help with understanding smart contracts and their data structure?\n- Yes, Sidekik and DethCode are both listed as resources that can help with understanding smart contracts and their data structure."
    },
    {
      "fileName": "utility-queries.md",
      "filePath": "docs/reference/wizard-tools/utility-queries.md",
      "url": "https://dune.com/docs/reference/wizard-tools/utility-queries.md",
      "summary": "# Utility Queries\n\nThis section of the Dune Docs project provides a list of queries that can be used to build other queries. The purpose of this section is to provide a starting point for users who want to create their own custom queries. The queries listed here are created by other users and are available for anyone to use.\n\nThe table provided in this section lists the name and link of each query, as well as the tag associated with it. The tag is used to categorize the queries and make it easier for users to find what they are looking for. The tags used in this section are \"decoding\", \"query starting point\", \"NFT\", and \"parameters\".\n\nFor example, the \"Is my Contract decoded yet\" queries by @0xBoxer are tagged as \"decoding\". These queries can be used to check if a contract has been decoded yet on different networks such as Polygon, xDAI, and BSC. The queries created by @ilemi are tagged as \"query starting point\" and can be used as a starting point for users who want to create their own custom queries. The query created by @hildobby is tagged as \"parameters\" and can be used to get the address from ENS.\n\nIf users have their own queries that they think should be included in this section, they can propose their changes by following the link provided in the description. \n\nOverall, this section of the Dune Docs project is a useful resource for users who want to create their own custom queries. By providing a list of queries that can be used as a starting point, users can save time and effort when creating their own queries.",
      "questions": "1. What is the purpose of the Dune Docs app and how does it relate to blockchain technology?\n- The Dune Docs app provides a list of utility queries that can be used to build queries related to blockchain technology.\n\n2. How can the utility queries listed in the app be used by a blockchain SQL analyst?\n- The utility queries listed in the app can be used as starting points for building more complex queries related to decoding contracts, analyzing event signatures and functions, and retrieving NFTs held by an address.\n\n3. Can users contribute their own utility queries to the Dune Docs app?\n- Yes, users can propose changes and contribute their own utility queries to the Dune Docs app by submitting them through the GitHub repository linked in the app."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc/docs/json/docs/reference/wizard-tools` folder contains a collection of guides and resources that are essential for data analysts and scientists working with Dune Analytics. These guides cover various aspects of blockchain analysis, data visualization, and query building, providing users with a comprehensive understanding of the tools and techniques used in the field.\n\nThe `blockchain-explorers.md` guide offers an overview of the primary web-based explorers for popular blockchains such as Ethereum, Solana, Arbitrum, and more. These explorers are crucial for understanding how certain protocols work and what data needs to be included in queries. For example, a data analyst can use the Etherscan explorer to retrieve data about transactions, addresses, blocks, and fees on the Ethereum blockchain.\n\nThe `helpful-dashboards.md` guide lists tutorial and reference dashboards that can help users learn Dune, Data Analytics, and Blockchain Analysis skills. Tutorial Dashboards, such as Tips and Tricks for Dune V2 Queries and Visualizations, provide valuable insights for learning new skills. Reference Dashboards, like Meta Monitoring, offer useful information for building queries more efficiently.\n\nThe `index.md` guide covers non-Dune tools that are helpful for learning about ERC-xxx standards, EVM resources, smart contract auditing, and blockchain data sleuthing. Resources like OpenZeppelin's ERC-xxx Standards Docs, Solidity Visual Developer for VS Code, and DeepDAO provide users with a comprehensive understanding of Ethereum and smart contracts.\n\nThe `utility-queries.md` guide provides a list of queries that can be used as a starting point for building custom queries. These queries are categorized using tags such as \"decoding\", \"query starting point\", \"NFT\", and \"parameters\". For instance, the \"Is my Contract decoded yet\" queries can be used to check if a contract has been decoded on different networks like Polygon, xDAI, and BSC.\n\nOverall, the guides and resources in the `wizard-tools` folder are invaluable for data analysts and scientists working with Dune Analytics. They offer a comprehensive understanding of blockchain analysis, data visualization, and query building, enabling users to create efficient and accurate queries for their projects.",
  "questions": ""
}