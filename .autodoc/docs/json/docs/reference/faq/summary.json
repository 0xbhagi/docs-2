{
  "folderName": "faq",
  "folderPath": ".autodoc/docs/json/docs/reference/faq",
  "url": "https://dune.com/.autodoc/docs/json/docs/reference/faq",
  "files": [
    {
      "fileName": "does-dune-have-a-token.md",
      "filePath": "docs/reference/faq/does-dune-have-a-token.md",
      "url": "https://dune.com/docs/reference/faq/does-dune-have-a-token.md",
      "summary": "This app technical guide is focused on the topic of whether or not Dune has a token. The guide provides a clear and concise answer to this question, stating that Dune does not have a token. \n\nThis information is important for users who may be looking to integrate Dune with other applications or services that require a token for authentication. By knowing that Dune does not have a token, users can adjust their integration plans accordingly and explore alternative authentication methods.\n\nThe guide is short and to the point, with the header and body text both clearly stating the answer to the question. No further explanation or examples are provided, as none are needed for this particular topic. Overall, this guide serves as a helpful reference for users seeking information on Dune's authentication capabilities.",
      "questions": "1. What is the purpose of Dune Docs? \n- The app technical guide does not provide information on the purpose of Dune Docs, which may be a concern for a blockchain SQL analyst who needs to understand the context of the app.\n\n2. Does Dune Docs integrate with any blockchain technology? \n- The app technical guide does not mention any integration with blockchain technology, which may be a relevant question for a blockchain SQL analyst.\n\n3. Is there any information on the app's architecture or database structure? \n- The app technical guide only provides information on the presence of a token, but does not offer any details on the app's architecture or database structure, which may be important for a blockchain SQL analyst to understand."
    },
    {
      "fileName": "does-dune-have-an-api.md",
      "filePath": "docs/reference/faq/does-dune-have-an-api.md",
      "url": "https://dune.com/docs/reference/faq/does-dune-have-an-api.md",
      "summary": "# App Technical Guide: Does Dune have an API?\n\nThis guide covers the topic of whether Dune, the project in question, has an API. The answer is yes, and this guide provides information on how to access it. \n\nThe first header states that Dune does have an API, and the following paragraph explains that users need to sign up for a paid plan and add on API access to use it. The guide also provides a link to pricing details for those interested in learning more. \n\nThe second header provides a link to learn more about how to use the API. This section likely covers the technical details of using the API, such as authentication, endpoints, and data formats. \n\nFinally, the guide notes that users without API access can still export results as CSV and embed Dune charts on their page for free. The link provided in this section leads to a guide on how to embed Dune charts. \n\nOverall, this guide serves as a brief introduction to Dune's API and provides links to more detailed information on how to access and use it. \n\nExample: \n\nTo access Dune's API, users must first sign up for a paid plan and add on API access. Once they have access, they can use the API to retrieve data from Dune. For example, a user could use the API to retrieve a list of all companies in Dune's database. The API documentation provides more information on how to use the API, including authentication and endpoint details.",
      "questions": "1. What kind of data can be accessed through Dune's API?\n- The app technical guide does not provide information on the specific data that can be accessed through Dune's API.\n\n2. Is there a limit to the number of API requests that can be made?\n- The app technical guide does not mention any limits on the number of API requests that can be made.\n\n3. Are there any security measures in place to protect user data accessed through the API?\n- The app technical guide does not provide information on the security measures in place to protect user data accessed through the API."
    },
    {
      "fileName": "how-are-results-refreshing.md",
      "filePath": "docs/reference/faq/how-are-results-refreshing.md",
      "url": "https://dune.com/docs/reference/faq/how-are-results-refreshing.md",
      "summary": "The app technical guide provides information on how often results are refreshed in the Dune app. The guide starts by directing users to the Meta Monitoring dashboard to view the current time it takes for new data to be added to Dune. \n\nThe guide then explains how results are refreshed in the app. When a visualization is viewed on a query page or dashboard, the Dune backend checks the age of the most recent result. If the result is older than three hours, Dune automatically queues an execution for the query and runs it in the background. This ensures that dashboards are always up to date when they are being viewed, and the query creator does not need to set a refresh schedule. \n\nIt is important to note that the query execution queue is separate from each individual user's queue when they create and run queries in the query editor. \n\nOverall, this guide provides users with a clear understanding of how results are refreshed in the Dune app and how they can ensure that their dashboards are always up to date. The guide also directs users to the Meta Monitoring dashboard for more information on the current time it takes for new data to be added to Dune. \n\nExample: \nIf a user creates a dashboard in the Dune app and views a visualization on that dashboard, the Dune backend will automatically check the age of the most recent result. If the result is older than three hours, Dune will queue an execution for the query and run it in the background to ensure that the dashboard is up to date. The user does not need to set a refresh schedule for the dashboard.",
      "questions": "1. What is the definition of \"stale\" results in this app and how is it determined?\n   \n   The definition of \"stale\" results in this app is currently defined as >3 hours old. It is determined by the age of the most recent result.\n\n2. Is there a way for users to manually refresh the data or do they have to wait for the automatic refresh?\n\n   It is not mentioned in the app technical guide whether users can manually refresh the data or not. Further investigation or clarification may be needed.\n\n3. How does the app handle errors or failed executions during the automatic refresh process?\n\n   The app technical guide does not provide information on how the app handles errors or failed executions during the automatic refresh process. It may be necessary to consult the app's documentation or contact the developer for more information."
    },
    {
      "fileName": "how-does-dune-get-its-data.md",
      "filePath": "docs/reference/faq/how-does-dune-get-its-data.md",
      "url": "https://dune.com/docs/reference/faq/how-does-dune-get-its-data.md",
      "summary": "# App Technical Guide: How does Dune get data?\n\nThis guide provides an overview of how Dune, the project being documented, obtains its data. The guide explains that Dune works with node providers across the industry to ingest raw historical data from various blockchains. However, it does not include state data. \n\nThe guide also mentions that Dune does not discriminate against any smart contract and users can submit any contract via the decoding page. The decoding page is located in the data-tables folder under the decoded subfolder. The only prerequisite for submitting a contract is an ABI, which is used to decode the contract. In most cases, the ABI is already available on Etherscan, but there may be edge cases where it is not available. \n\nOverall, this guide provides a high-level understanding of how Dune obtains its data and how users can submit their own contracts for decoding. It is useful for anyone who wants to understand the data sources used by Dune and how to work with smart contracts on the platform. \n\nExample: \n\nSuppose a user wants to work with a smart contract on the Dune platform. They can submit the contract via the decoding page, which is located in the data-tables folder under the decoded subfolder. The user needs to provide the ABI for the contract, which is used to decode it. Once the contract is decoded, the user can work with it on the Dune platform in a matter of hours.",
      "questions": "1. What blockchains does Dune Docs currently support for data ingestion?\n- The app technical guide mentions that Dune Docs is working with node providers across the industry to ingest data from blockchains, but does not specify which blockchains are currently supported.\n\n2. Does Dune Docs include state data in its database?\n- The app technical guide states that Dune Docs ingests all raw historical data from blockchains, but explicitly mentions that it does not include state data. A blockchain SQL analyst may want to know if this limitation affects their ability to analyze data on the platform.\n\n3. How does Dune Docs handle smart contracts without an ABI?\n- The app technical guide mentions that an ABI is required to decode a smart contract, but does not provide information on how Dune Docs handles contracts without an ABI. A blockchain SQL analyst may want to know if there are any workarounds or limitations to working with contracts that do not have an ABI available."
    }
  ],
  "folders": [],
  "summary": "The `.autodoc/docs/json/docs/reference/faq` folder contains a collection of app technical guides that answer frequently asked questions about the Dune project. These guides provide valuable information for users who want to understand various aspects of Dune, such as its data sources, API access, and result refreshing mechanisms.\n\nFor example, the `does-dune-have-a-token.md` guide clarifies that Dune does not have a token, which is essential for users looking to integrate Dune with other applications or services that require token-based authentication. This information helps users adjust their integration plans and explore alternative authentication methods.\n\nThe `does-dune-have-an-api.md` guide confirms that Dune has an API and provides information on how to access it. Users must sign up for a paid plan and add on API access to use the API. This guide also provides links to pricing details and more in-depth information on using the API, such as authentication, endpoints, and data formats. This guide is useful for users who want to retrieve data from Dune programmatically, for example, to obtain a list of all companies in Dune's database.\n\nIn the `how-are-results-refreshing.md` guide, users can learn about the result refreshing mechanism in the Dune app. The guide explains that when a visualization is viewed on a query page or dashboard, Dune checks the age of the most recent result. If the result is older than three hours, Dune automatically queues an execution for the query and runs it in the background. This ensures that dashboards are always up to date when viewed, without the need for the query creator to set a refresh schedule.\n\nLastly, the `how-does-dune-get-its-data.md` guide offers an overview of how Dune obtains its data by working with node providers across the industry to ingest raw historical data from various blockchains. The guide also explains how users can submit their own smart contracts for decoding via the decoding page, provided they have an ABI. This information is useful for users who want to understand Dune's data sources and work with smart contracts on the platform.\n\nOverall, the guides in the `.autodoc/docs/json/docs/reference/faq` folder provide concise and relevant information for users who want to understand various aspects of the Dune project. These guides are essential for analysts who are curious about using the project and need clarification on specific features or functionalities.",
  "questions": ""
}