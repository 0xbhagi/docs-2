{
  "folderName": "reference",
  "folderPath": ".autodoc/docs/json/docs/reference",
  "url": "https://dune.com/.autodoc/docs/json/docs/reference",
  "files": [
    {
      "fileName": "citing-dune.md",
      "filePath": "docs/reference/citing-dune.md",
      "url": "https://dune.com/docs/reference/citing-dune.md",
      "summary": "# Citing Dune\n\nThis section of the app technical guide for Dune Docs covers how to correctly reference and cite Dune queries and dashboards. The guide emphasizes the importance of crediting the creators of the queries, visualizations, and dashboards that are shared on the platform. \n\nThe guide provides specific instructions on how to credit the creators of the content, including a direct link to dune.com, a Dune logo, and a reference to the specific creator(s) of the content. The guide also provides examples of how to credit a specific query or dashboard, including the use of the creator's username and the name of the query or dashboard.\n\nThe guide also includes a section on the limitations of commercial use. It states that any form of copying, transmitting, transferring, modifying, or creating derivative works from the original queries and public dashboard is strictly prohibited. Additionally, any form of exploiting any portion, use, or access to Dune without the express written permission by Dune is not allowed.\n\nOverall, this guide is important for users of the Dune platform to understand how to properly credit the creators of the content they use and share. It also serves as a reminder of the limitations of commercial use and the importance of obtaining permission from Dune before using or exploiting any portion of the platform.",
      "questions": "1. What type of data does Dune Docs provide and how is it sourced?\n- According to the app technical guide, Dune Docs provides queries, visualizations, and dashboards. The data is sourced from the creators (\"Wizards\") who build these features on the platform.\n\n2. Can Dune Docs data be used for commercial purposes?\n- The app technical guide states that any form of commercial use, including copying, modifying, or creating derivative works, is strictly prohibited without express written permission from Dune.\n\n3. How can Dune Docs data be properly cited and credited?\n- The app technical guide provides specific instructions for citing Dune Docs data, including including a Dune logo, a direct link to dune.com, and a reference to credit the creator(s) of the specific query, dashboard, or data."
    },
    {
      "fileName": "dune-bounties.md",
      "filePath": "docs/reference/dune-bounties.md",
      "url": "https://dune.com/docs/reference/dune-bounties.md",
      "summary": "The Dune Bounties technical guide is a comprehensive guide that explains how Dune Analytics empowers projects and wizards to collaborate through $$ incentives. The guide is divided into several sections that cover different aspects of the Dune Bounties project. \n\nThe guide starts by introducing Dune Analytics as a go-to solution for on-demand crypto analytics. It then highlights the problem that Wizards and Projects face in finding each other and how Dune Bounties solves this problem by creating a marketplace that handles task creation, application process, communication, reputation, and payments. \n\nThe guide then explains how Dune Bounties works by leveraging dework.xyz to set up a bounty board that manages Dune internal bounty programs. The guide also provides detailed instructions on how organizations can connect with Dune Wizards and how Wizards can find tasks. \n\nThe guide also provides some notes about working on Dune, which can be roughly separated into two parts: the App Layer and the Data Layer. The App Layer contains Queries, Visualizations, and Dashboards, while the Data Layer allows Wizards to produce scalable and persistent work by standardizing and normalizing data. \n\nThe guide concludes with a Dune Bounties FAQ section that answers common questions about the project, such as how much to pay Wizards, how Wizards get paid, and how to choose the right applicant. \n\nOverall, the Dune Bounties technical guide is an excellent resource for anyone interested in learning about Dune Analytics and how it empowers projects and Wizards to collaborate through $$ incentives. The guide provides detailed instructions on how to use Dune Bounties, making it easy for organizations and Wizards to get started.",
      "questions": "1. What is the purpose of Dune Bounties and how does it relate to blockchain data analysis?\n    \n    Dune Bounties is a marketplace that connects projects in need of web3 analytics with Dune Wizards who want jobs. It allows for task creation, application process, communication, reputation, and payments, and is web3 native. This platform can be used by blockchain SQL analysts to find jobs and get paid for their work.\n\n2. How does Dune Bounties handle payments and what wallets does it integrate with?\n    \n    Dune Bounties uses Dework's native payment feature, which allows Wizards to connect their wallet in their Dework profile and get paid as soon as the bounty is paid out by the Project that created the task. Dework integrates with Metamask, Gnosis Safe, Utopia Labs, and Phantom wallet for Solana-based payments.\n\n3. How can Dune Bounties help with data normalization and standardization for blockchain data analysis?\n    \n    Dune Bounties can help with data normalization and standardization by allowing projects to define tasks with the \"Dune Analytics\" Skill, which will appear in the Dune hub. By transforming raw data and adding it to the `opensea.trades` table inside of Spellbook, Dune Wizards can easily work with the data as it's cleaned and standardized. This makes it more likely that Wizards will incorporate the data into their work as the `nft.trades` table contains data from all marketplaces across all chains."
    },
    {
      "fileName": "events.md",
      "filePath": "docs/reference/events.md",
      "url": "https://dune.com/docs/reference/events.md",
      "summary": "# App Technical Guide: Events\n\nThis guide covers the Events feature of the Dune app. The purpose of this feature is to facilitate community engagement and participation in events, both online and in-person. \n\nThe first section of the guide emphasizes the importance of community in the Dune app and how events are a key aspect of building and maintaining that community. It encourages users to join the Community Discord to connect with other users and learn from them. \n\nThe second section of the guide provides information on how to access the events calendar on the Dune app. Users can view both streamed and in-person events on the calendar. The guide also includes a step-by-step tutorial on how to subscribe to the calendar and add it to their own personal calendar. \n\nExample: \nTo join the Dune community and stay up-to-date on events, users can follow the link to the Community Discord provided in the guide. They can also access the events calendar by visiting events.dune.com and subscribing to the calendar using the tutorial provided in the guide. \n\nOverall, the Events feature of the Dune app is designed to foster a sense of community and encourage user engagement through events. This guide provides users with the necessary information to participate in these events and stay informed about upcoming ones.",
      "questions": "1. What is the purpose of the Dune app and how does it relate to blockchain technology?\n- The app technical guide does not provide information on the purpose of the Dune app or its relation to blockchain technology.\n\n2. Does the app use any SQL databases to manage event data?\n- The app technical guide does not mention the use of any SQL databases to manage event data.\n\n3. Are there any APIs or integrations available for developers to access event data?\n- The app technical guide does not provide information on any APIs or integrations available for developers to access event data."
    },
    {
      "fileName": "index.md",
      "filePath": "docs/reference/index.md",
      "url": "https://dune.com/docs/reference/index.md",
      "summary": "# App Technical Guide: Reference\n\nThe Reference section of the Dune Docs project is designed to provide answers to common questions about the app. This section is particularly useful for users who are new to the app and need help getting started. \n\nThe header of the guide provides a brief overview of what users can expect to find in the Reference section. It explains that this section is the place to get answers to \"who, what, where\" questions. For example, users can find information about what data exists in Dune Tables, what tools are helpful for building dashboards, and where to find Dune events and support. \n\nThe guide also mentions that the Reference section includes a few supplemental resources, such as Wizard Tools. This is an example of how the guide provides specific examples of what users can expect to find in this section of the app. \n\nThe note at the beginning of the guide is worth mentioning as well. It explains that the Reference section is a catch-all for information that doesn't fit neatly into other sections of the app. This is a helpful reminder that users may need to look in multiple places to find the information they need. \n\nOverall, the Reference section of the Dune Docs project is a valuable resource for users who need help navigating the app. It provides answers to common questions and includes supplemental resources to help users get the most out of the app.",
      "questions": "1. What is the purpose of Dune Tables and what kind of data can be found in them?\n   - The app technical guide mentions finding answers to \"what data exists in Dune Tables\" which may be of interest to a blockchain SQL analyst looking to work with the data.\n   \n2. Are there any specific dashboard building tools recommended by the app?\n   - The guide mentions finding answers to \"what tools are helpful for building dashboards\" which may be of interest to a blockchain SQL analyst looking to create visualizations for the data.\n\n3. What are the Wizard Tools mentioned in the guide and how can they be used in conjunction with Dune Docs?\n   - The guide mentions supplemental resources like Wizard Tools that may be helpful for a blockchain SQL analyst looking to enhance their work as a \"Wizard\"."
    },
    {
      "fileName": "press-kit.md",
      "filePath": "docs/reference/press-kit.md",
      "url": "https://dune.com/docs/reference/press-kit.md",
      "summary": "# Dune Docs App Technical Guide: Press Kit\n\nThe Press Kit section of the Dune Docs project provides access to Dune's brand assets. This guide covers the different types of logos available in the Press Kit and how they should be used.\n\n## Primary - Standard Logo\n\nThe primary Dune logo is the standard logo that should be used whenever possible. This logo is horizontal and is displayed in the following format:\n\n![Dune horizontal logo cover](images/dune-horizontal-logo-cover.png)\n\nThe following files are available for the primary standard logo:\n\n- dune-standard-logo.svg\n- dune-standard-logo@2x.png\n- dune-standard-logo-dark.svg\n- dune-standard-logo-dark@2x.png\n\n## Vertical Logo\n\nThe vertical logo is an alternative to the primary standard logo. This logo is vertical and is displayed in the following format:\n\n![Dune vertical logo cover](images/dune-vertical-logo-cover.png)\n\nThe following files are available for the vertical logo:\n\n- dune-vertical-logo.svg\n- dune-vertical-logo@2x.png\n- dune-vertical-logo-dark.svg\n- dune-vertical-logo-dark@2x.png\n\n## Icon Only\n\nThe icon only logo is a simplified version of the Dune logo that only includes the icon. This logo is displayed in the following format:\n\n![Dune icon only](images/dune-icon-only.svg)\n\nThe following files are available for the icon only logo:\n\n- dune-icon-only.svg\n- dune-icon-only@2x.png\n\n## Complete Set of All Logos\n\nThe complete set of all logos is available in a zip file that can be downloaded from the Press Kit section of the Dune Docs project. This file includes all of the logos mentioned above.\n\nOverall, the Press Kit section of the Dune Docs project provides users with access to Dune's brand assets, including different types of logos. This guide explains the different types of logos available and how they should be used. By following these guidelines, users can ensure that they are using Dune's brand assets correctly and consistently.",
      "questions": "1. What is the purpose of the Dune app and how does it relate to blockchain technology?\n- The app technical guide does not provide information on the purpose of the Dune app or its relation to blockchain technology.\n\n2. Are there any specific guidelines or restrictions on how the Dune brand assets can be used in blockchain-related projects?\n- The app technical guide does not provide any specific guidelines or restrictions on how the Dune brand assets can be used in blockchain-related projects.\n\n3. Is there any information on the file formats and sizes available for the Dune logos and icons?\n- Yes, the app technical guide provides information on the file formats and sizes available for the Dune logos and icons, including SVG and PNG formats in standard and high-resolution versions."
    },
    {
      "fileName": "pricing.md",
      "filePath": "docs/reference/pricing.md",
      "url": "https://dune.com/docs/reference/pricing.md",
      "summary": "This app technical guide covers the pricing feature of the Dune app. The guide provides information about the premium accounts and the additional features that come with them. The guide also includes a link to the pricing page where users can learn more and get started. The FAQ section of the guide answers general questions about billing history, upgrading, downgrading, and canceling subscriptions. The guide also explains how billing works when upgrading or downgrading and which query engine will be billed. The query execution section of the guide provides information about the performance tiers and the difference in performance between them. The section also explains when the rate for additional executions kicks in and how users can limit premium query usage to avoid paying extra fees. The features section of the guide answers questions about private queries, public dashboards, and watermarks. \n\nFor instance, the guide explains that private queries and dashboards, CSV exports, faster executions, no Dune watermarks, and processing for up to six queries at once are some of the additional features that come with premium accounts. The guide also provides steps on how to view billing history, upgrade, downgrade, or cancel a subscription. Additionally, the guide explains that upgrading immediately resets the billing cycle, while downgrades are applied at the end of the billing cycle. The guide also provides information about the performance difference between tiers and when the rate for additional executions kicks in. Finally, the guide explains that private queries can be added to public dashboards, and users can embed private queries on other websites. However, public dashboard URLs will always be watermarked. \n\nOverall, this guide provides users with detailed information about the pricing feature of the Dune app, including premium accounts, additional features, billing, and query execution. The guide is useful for users who want to learn more about the pricing feature and how to manage their subscriptions.",
      "questions": "1. What additional features are available with Dune Premium accounts?\n- Dune Premium accounts provide access to private queries and dashboards, CSV exports, faster executions, no Dune watermarks, and processing for up to 6 queries at once.\n\n2. How does billing work when upgrading or downgrading a subscription?\n- Upgrading immediately resets the billing cycle to the day of the upgrade, while downgrades are applied at the end of the billing cycle. Refunds for unused days are provided for upgrades, and the current tier benefits are kept until the end of the current cycle for downgrades.\n\n3. Which query engine is billed for queries and CSV downloads?\n- Queries and CSV downloads on both Dune Engine V2 and other datasets will be billed."
    },
    {
      "fileName": "recommended-reading.md",
      "filePath": "docs/reference/recommended-reading.md",
      "url": "https://dune.com/docs/reference/recommended-reading.md",
      "summary": "# Recommended Reading\n\nThis guide provides a list of recommended reading resources for users on their web3 data analytics journey. The resources are grouped into different categories, including Wizard Content, General Blockchain Info, DeFi, DAOs, Bridges/L2, EIPs, News and Info, Newsletters, and Cool Blockchain Data Websites. \n\nUnder Wizard Content, the guide lists content created by members of the Wizard community, including Journey to the Centre of Arakis by @1chioku, Andrew Hong's Mirror.xyz by @ilemi, and NiftyTable by @niftytable. \n\nThe General Blockchain Info section provides a link to Immersion Den, which is a collection of web3 information sources. \n\nThe DeFi section provides a link to the Biggest DeFi Hacks, which is a leaderboard of the biggest DeFi hacks. \n\nThe DAOs section provides links to DAO-related resources, including DAOs: Absorbing the Internet and DAO Central - Learn about DAOs. \n\nThe Bridges/L2 section provides a link to The ultimate guide to L2s on Ethereum, which is a comprehensive guide to Layer 2 scaling solutions on Ethereum. \n\nThe EIPs section provides a link to the Ethereum Improvement Proposals (EIPs) website, which is a repository of proposals for changes to the Ethereum protocol. \n\nThe News and Info section provides links to various news sources, including 21Shares, Blockworks, Decrypt, CoinDesk, Week in Ethereum News, Bankless, The Daily Ape, Finematics (helpful youtube videos), and Gaby's Web3 reading list. \n\nThe Newsletters section provides links to various newsletters, including The Dune Digest, CryptoPragmatist, Messari, The Daily Gwei, OurNetwork data newsletter, and NotBoring. \n\nFinally, the Cool Blockchain Data Websites section provides links to various websites that provide blockchain data, including cryptofees.info, ultrasound.money, fees.wtf, and liquidated.live. \n\nOverall, this guide provides a comprehensive list of resources for users to explore as they navigate the world of web3 data analytics.",
      "questions": "1. What is the purpose of the Dune Docs app and how does it relate to blockchain SQL analysis?\n- The app technical guide does not provide information on the purpose of the Dune Docs app or its relation to blockchain SQL analysis.\n\n2. Are there any resources specifically related to blockchain SQL analysis included in the recommended reading?\n- The recommended reading includes resources related to web3 data analytics in general, but does not specifically mention blockchain SQL analysis.\n\n3. Can users suggest additional resources to be included in the recommended reading list?\n- Yes, users can suggest additional resources to be included in the recommended reading list by proposing changes on the GitHub page provided in the guide."
    },
    {
      "fileName": "support-feedback.md",
      "filePath": "docs/reference/support-feedback.md",
      "url": "https://dune.com/docs/reference/support-feedback.md",
      "summary": "# Support & Feedback\n\nThis technical guide provides information on how to get support and leave feedback for the Dune app. The guide is divided into two main sections: \"How to Get Support\" and \"How to Leave Feedback.\"\n\nThe \"How to Get Support\" section provides users with two options for getting help. The first option is to use the search bar located above the guide. The second option is to join the Dune Discord server and ask for help in one of the relevant support channels. The guide lists seven channels, each with a specific focus, such as beginners, query questions, data tables, decoding, dashboards and visualization, spellbook, and Dune API. \n\nThe \"How to Leave Feedback\" section provides users with three options for leaving feedback. The first option is to leave a suggestion on the Canny board. The second option is to use one of the three feedback channels in Discord, which are general feedback, bug reports, and feature requests. The third option is to open a GitHub issue or submit a pull request if the feedback is related to Docs feedback fixes or additions.\n\nThe guide also provides information on how to handle account issues. Users are advised to send an email to support@dune.com for any issues related to their account, billing, or any other administrative problems.\n\nOverall, this technical guide is a useful resource for users who need help with the Dune app or want to provide feedback. The guide provides clear instructions on how to get support and leave feedback, and it also lists the relevant channels and options for each. The guide is well-organized and easy to follow, making it a valuable tool for users of the Dune app.",
      "questions": "1. What is the purpose of Dune Docs and how does it relate to blockchain technology?\n- The app technical guide does not provide information on the purpose of Dune Docs or its relation to blockchain technology.\n\n2. Are there any specific SQL queries or data tables related to blockchain that can be accessed through Dune Docs?\n- The app technical guide provides information on relevant support channels for building queries and questions related to data tables in Dune, but does not specify if they are related to blockchain specifically.\n\n3. Is there any information on the security measures in place for Dune Docs, especially considering the sensitive nature of blockchain data?\n- The app technical guide does not provide information on the security measures in place for Dune Docs."
    },
    {
      "fileName": "v1-sunsetting.md",
      "filePath": "docs/reference/v1-sunsetting.md",
      "url": "https://dune.com/docs/reference/v1-sunsetting.md",
      "summary": "# Sunsetting Dune V1\n\nThis technical guide covers the decommissioning of Dune Engine V1 and the transition to V2 as the primary platform. The guide provides details on the decommissioning process, including the timeline for each blockchain, and what users can expect during each step. \n\nThe guide starts by announcing that with the release of the Polygon decoded tables on Dune Engine V2, all Raw and Decoded data that was on V1 is now on V2. As a result, the decommissioning process has started, and blockchains on V1 are being decommissioned as the transition to V2 is made. \n\nThe guide then provides details on the decommissioning process, which is the same for all blockchains. The process has four steps, starting with a fair warning that the blockchain will be decommissioned in the future, followed by the removal of the blockchain from the blockchain selection dropdown, making existing queries still editable on V1, but no new queries can be created on V1 dataset. The third step is where V1 queries for the given blockchain become read-only, and forking and updating to DuneSQL is required. Queries can still be run, but no changes can be made. The final step is where no new data will be ingested, and no new query executions on V1 databases, decommission complete. Queries have to be forked and adjusted to V2.\n\nThe guide also provides a schedule for the decommissioning of each blockchain, including the kickoff date and the completion date for each step. \n\nFinally, the guide provides links to resources where users can learn more about DuneSQL, how searching in V2 works, and general insights from Dune Arcana videos. Users can also join live office hours or ask questions in the #query-questions Discord channel.\n\nOverall, this guide provides a clear and detailed explanation of the decommissioning process for Dune Engine V1 and what users can expect during each step. It also provides helpful resources for users to learn more about the transition to V2 and ask questions.",
      "questions": "1. What is the reason for sunsetting Dune V1 and transitioning to V2 as the primary platform?\n   \n   Answer: The reason for sunsetting Dune V1 and transitioning to V2 as the primary platform is due to the release of the Polygon decoded tables on Dune Engine V2, which now has all Raw and Decoded data that was on V1 on V2.\n\n2. What are the implications for existing and new contracts that are submitted for decoding on all blockchains?\n   \n   Answer: No new contracts that are submitted for decoding (on all blockchains) will be decoded on V1, they will only be decoded on V2 (already decoded contracts will continue to work as normal).\n\n3. What is the decommissioning schedule for Dune V1 databases and what are the steps involved in the decommissioning process?\n   \n   Answer: The decommissioning schedule for Dune V1 databases is provided in the table in the technical guide. The steps involved in the decommissioning process include: (1) kicking off the decommissioning, (2) removal of the blockchain from the blockchain selection dropdown, (3) V1 queries for the given blockchain will become read only, and (4) no new data will be ingested and no new query executions on V1 databases, decommission complete. Queries have to be forked and adjusted to V2."
    }
  ],
  "folders": [
    {
      "folderName": "faq",
      "folderPath": ".autodoc/docs/json/docs/reference/faq",
      "url": "https://dune.com/.autodoc/docs/json/docs/reference/faq",
      "files": [
        {
          "fileName": "does-dune-have-a-token.md",
          "filePath": "docs/reference/faq/does-dune-have-a-token.md",
          "url": "https://dune.com/docs/reference/faq/does-dune-have-a-token.md",
          "summary": "This app technical guide is focused on the topic of whether or not Dune has a token. The guide provides a clear and concise answer to this question, stating that Dune does not have a token. \n\nThis information is important for users who may be looking to integrate Dune with other applications or services that require a token for authentication. By knowing that Dune does not have a token, users can adjust their integration plans accordingly and explore alternative authentication methods.\n\nThe guide is short and to the point, with the header and body text both clearly stating the answer to the question. No further explanation or examples are provided, as none are needed for this particular topic. Overall, this guide serves as a helpful reference for users seeking information on Dune's authentication capabilities.",
          "questions": "1. What is the purpose of Dune Docs? \n- The app technical guide does not provide information on the purpose of Dune Docs, which may be a concern for a blockchain SQL analyst who needs to understand the context of the app.\n\n2. Does Dune Docs integrate with any blockchain technology? \n- The app technical guide does not mention any integration with blockchain technology, which may be a relevant question for a blockchain SQL analyst.\n\n3. Is there any information on the app's architecture or database structure? \n- The app technical guide only provides information on the presence of a token, but does not offer any details on the app's architecture or database structure, which may be important for a blockchain SQL analyst to understand."
        },
        {
          "fileName": "does-dune-have-an-api.md",
          "filePath": "docs/reference/faq/does-dune-have-an-api.md",
          "url": "https://dune.com/docs/reference/faq/does-dune-have-an-api.md",
          "summary": "# App Technical Guide: Does Dune have an API?\n\nThis guide covers the topic of whether Dune, the project in question, has an API. The answer is yes, and this guide provides information on how to access it. \n\nThe first header states that Dune does have an API, and the following paragraph explains that users need to sign up for a paid plan and add on API access to use it. The guide also provides a link to pricing details for those interested in learning more. \n\nThe second header provides a link to learn more about how to use the API. This section likely covers the technical details of using the API, such as authentication, endpoints, and data formats. \n\nFinally, the guide notes that users without API access can still export results as CSV and embed Dune charts on their page for free. The link provided in this section leads to a guide on how to embed Dune charts. \n\nOverall, this guide serves as a brief introduction to Dune's API and provides links to more detailed information on how to access and use it. \n\nExample: \n\nTo access Dune's API, users must first sign up for a paid plan and add on API access. Once they have access, they can use the API to retrieve data from Dune. For example, a user could use the API to retrieve a list of all companies in Dune's database. The API documentation provides more information on how to use the API, including authentication and endpoint details.",
          "questions": "1. What kind of data can be accessed through Dune's API?\n- The app technical guide does not provide information on the specific data that can be accessed through Dune's API.\n\n2. Is there a limit to the number of API requests that can be made?\n- The app technical guide does not mention any limits on the number of API requests that can be made.\n\n3. Are there any security measures in place to protect user data accessed through the API?\n- The app technical guide does not provide information on the security measures in place to protect user data accessed through the API."
        },
        {
          "fileName": "how-are-results-refreshing.md",
          "filePath": "docs/reference/faq/how-are-results-refreshing.md",
          "url": "https://dune.com/docs/reference/faq/how-are-results-refreshing.md",
          "summary": "The app technical guide provides information on how often results are refreshed in the Dune app. The guide starts by directing users to the Meta Monitoring dashboard to view the current time it takes for new data to be added to Dune. \n\nThe guide then explains how results are refreshed in the app. When a visualization is viewed on a query page or dashboard, the Dune backend checks the age of the most recent result. If the result is older than three hours, Dune automatically queues an execution for the query and runs it in the background. This ensures that dashboards are always up to date when they are being viewed, and the query creator does not need to set a refresh schedule. \n\nIt is important to note that the query execution queue is separate from each individual user's queue when they create and run queries in the query editor. \n\nOverall, this guide provides users with a clear understanding of how results are refreshed in the Dune app and how they can ensure that their dashboards are always up to date. The guide also directs users to the Meta Monitoring dashboard for more information on the current time it takes for new data to be added to Dune. \n\nExample: \nIf a user creates a dashboard in the Dune app and views a visualization on that dashboard, the Dune backend will automatically check the age of the most recent result. If the result is older than three hours, Dune will queue an execution for the query and run it in the background to ensure that the dashboard is up to date. The user does not need to set a refresh schedule for the dashboard.",
          "questions": "1. What is the definition of \"stale\" results in this app and how is it determined?\n   \n   The definition of \"stale\" results in this app is currently defined as >3 hours old. It is determined by the age of the most recent result.\n\n2. Is there a way for users to manually refresh the data or do they have to wait for the automatic refresh?\n\n   It is not mentioned in the app technical guide whether users can manually refresh the data or not. Further investigation or clarification may be needed.\n\n3. How does the app handle errors or failed executions during the automatic refresh process?\n\n   The app technical guide does not provide information on how the app handles errors or failed executions during the automatic refresh process. It may be necessary to consult the app's documentation or contact the developer for more information."
        },
        {
          "fileName": "how-does-dune-get-its-data.md",
          "filePath": "docs/reference/faq/how-does-dune-get-its-data.md",
          "url": "https://dune.com/docs/reference/faq/how-does-dune-get-its-data.md",
          "summary": "# App Technical Guide: How does Dune get data?\n\nThis guide provides an overview of how Dune, the project being documented, obtains its data. The guide explains that Dune works with node providers across the industry to ingest raw historical data from various blockchains. However, it does not include state data. \n\nThe guide also mentions that Dune does not discriminate against any smart contract and users can submit any contract via the decoding page. The decoding page is located in the data-tables folder under the decoded subfolder. The only prerequisite for submitting a contract is an ABI, which is used to decode the contract. In most cases, the ABI is already available on Etherscan, but there may be edge cases where it is not available. \n\nOverall, this guide provides a high-level understanding of how Dune obtains its data and how users can submit their own contracts for decoding. It is useful for anyone who wants to understand the data sources used by Dune and how to work with smart contracts on the platform. \n\nExample: \n\nSuppose a user wants to work with a smart contract on the Dune platform. They can submit the contract via the decoding page, which is located in the data-tables folder under the decoded subfolder. The user needs to provide the ABI for the contract, which is used to decode it. Once the contract is decoded, the user can work with it on the Dune platform in a matter of hours.",
          "questions": "1. What blockchains does Dune Docs currently support for data ingestion?\n- The app technical guide mentions that Dune Docs is working with node providers across the industry to ingest data from blockchains, but does not specify which blockchains are currently supported.\n\n2. Does Dune Docs include state data in its database?\n- The app technical guide states that Dune Docs ingests all raw historical data from blockchains, but explicitly mentions that it does not include state data. A blockchain SQL analyst may want to know if this limitation affects their ability to analyze data on the platform.\n\n3. How does Dune Docs handle smart contracts without an ABI?\n- The app technical guide mentions that an ABI is required to decode a smart contract, but does not provide information on how Dune Docs handles contracts without an ABI. A blockchain SQL analyst may want to know if there are any workarounds or limitations to working with contracts that do not have an ABI available."
        }
      ],
      "folders": [],
      "summary": "The `.autodoc/docs/json/docs/reference/faq` folder contains a collection of app technical guides that answer frequently asked questions about the Dune project. These guides provide valuable information for users who want to understand various aspects of Dune, such as its data sources, API access, and result refreshing mechanisms.\n\nFor example, the `does-dune-have-a-token.md` guide clarifies that Dune does not have a token, which is essential for users looking to integrate Dune with other applications or services that require token-based authentication. This information helps users adjust their integration plans and explore alternative authentication methods.\n\nThe `does-dune-have-an-api.md` guide confirms that Dune has an API and provides information on how to access it. Users must sign up for a paid plan and add on API access to use the API. This guide also provides links to pricing details and more in-depth information on using the API, such as authentication, endpoints, and data formats. This guide is useful for users who want to retrieve data from Dune programmatically, for example, to obtain a list of all companies in Dune's database.\n\nIn the `how-are-results-refreshing.md` guide, users can learn about the result refreshing mechanism in the Dune app. The guide explains that when a visualization is viewed on a query page or dashboard, Dune checks the age of the most recent result. If the result is older than three hours, Dune automatically queues an execution for the query and runs it in the background. This ensures that dashboards are always up to date when viewed, without the need for the query creator to set a refresh schedule.\n\nLastly, the `how-does-dune-get-its-data.md` guide offers an overview of how Dune obtains its data by working with node providers across the industry to ingest raw historical data from various blockchains. The guide also explains how users can submit their own smart contracts for decoding via the decoding page, provided they have an ABI. This information is useful for users who want to understand Dune's data sources and work with smart contracts on the platform.\n\nOverall, the guides in the `.autodoc/docs/json/docs/reference/faq` folder provide concise and relevant information for users who want to understand various aspects of the Dune project. These guides are essential for analysts who are curious about using the project and need clarification on specific features or functionalities.",
      "questions": ""
    },
    {
      "folderName": "wizard-tools",
      "folderPath": ".autodoc/docs/json/docs/reference/wizard-tools",
      "url": "https://dune.com/.autodoc/docs/json/docs/reference/wizard-tools",
      "files": [
        {
          "fileName": "blockchain-explorers.md",
          "filePath": "docs/reference/wizard-tools/blockchain-explorers.md",
          "url": "https://dune.com/docs/reference/wizard-tools/blockchain-explorers.md",
          "summary": "# Blockchain Explorers\n\nThis section of the app technical guide covers the primary web-based explorers for the most popular blockchains. The purpose of this guide is to provide an overview of what blockchain explorers are and how they can be used by data analysts/scientists to explore a blockchain. \n\nThe guide explains that blockchain explorers provide an online interface for users to look up any particular blockchain of choice and retrieve data about transactions, addresses, blocks, and fees, amongst others. The guide then lists the primary web-based explorers for the most popular blockchains, including Ethereum, Solana, Arbitrum, Polygon, Optimism, Avalanche C-Chain, Binance Smart Chain, and Gnosis Chain. \n\nThe guide also highlights that while blockchain explorers won't let users do half of the cool things Dune does, they are indispensable for figuring out how certain protocols work and what data needs to be included in queries. \n\nExample: If a data analyst/scientist wants to explore the Ethereum blockchain, they can use the Etherscan explorer listed in the guide to retrieve data about transactions, addresses, blocks, and fees. \n\nOverall, this section of the app technical guide provides a useful overview of blockchain explorers and their importance for data analysts/scientists.",
          "questions": "1. What is the purpose of Blockchain Explorers?\n- Blockchain Explorers allow Data Analysts/Scientists to explore a blockchain by providing an online interface to retrieve data about transactions, addresses, blocks, and fees, amongst others.\n\n2. What are some of the popular blockchains that this app technical guide covers?\n- This app technical guide covers popular blockchains such as Ethereum, Solana, Arbitrum, Polygon, Optimism, Avalanche C-Chain, Binance Smart Chain, and Gnosis Chain.\n\n3. How does this app technical guide compare to Dune in terms of functionality?\n- The app technical guide acknowledges that while Blockchain Explorers won't let you do half of the cool things Dune does, they are indispensable for figuring out how certain protocols work and what data you need to include in your queries."
        },
        {
          "fileName": "helpful-dashboards.md",
          "filePath": "docs/reference/wizard-tools/helpful-dashboards.md",
          "url": "https://dune.com/docs/reference/wizard-tools/helpful-dashboards.md",
          "summary": "# Helpful Dashboards\n\nThis app technical guide covers a list of dashboards that are useful for those who want to learn Dune, Data Analytics, and Blockchain Analysis skills. The guide is divided into two sections: Tutorial Dashboards and Reference Dashboards.\n\nThe Tutorial Dashboards section contains dashboards that are great for learning new skills. The dashboards include Tips and Tricks for Dune V2 Queries and Visualizations, Data Visualization Cheat Sheet, Event and Function Signature Sleuthing, Getting Started, and Contract Quickstart. Each dashboard is created by a different user and provides a unique perspective on how to use Dune.\n\nThe Reference Dashboards section contains dashboards that are helpful to refer to while building queries. The dashboards include Meta Monitoring, Is my Contract Decoded Yet?, and Dune DB Guide. These dashboards provide useful information that can help users build queries more efficiently.\n\nThe guide also encourages users to submit their own dashboards by submitting a GitHub Pull Request. If the dashboard is helpful, it will be added to the list.\n\nOverall, this guide provides a list of dashboards that can help users learn Dune, Data Analytics, and Blockchain Analysis skills. It also provides a list of reference dashboards that can help users build queries more efficiently.",
          "questions": "1. What is the purpose of the Dune Docs app?\n- The app technical guide does not provide a clear answer to this question.\n\n2. What kind of data can be analyzed using the dashboards provided by Dune Docs?\n- The dashboards are designed for Dune, Data Analytics, and Blockchain Analysis skills.\n\n3. Can users contribute their own dashboards to the app?\n- Yes, users can submit their own dashboards via a GitHub Pull Request and if deemed helpful, they will be added to the list."
        },
        {
          "fileName": "index.md",
          "filePath": "docs/reference/wizard-tools/index.md",
          "url": "https://dune.com/docs/reference/wizard-tools/index.md",
          "summary": "# Wizard Tools\n\nThis section of the app technical guide covers some of the non-Dune tools that the wizards use to make their magic happen. The tools listed here are helpful for learning about ERC-xxx standards, EVM resources, smart contract auditing, blockchain data sleuthing, and more. \n\nSome of the tools listed include OpenZepplin's ERC-xxx Standards Docs, which are helpful for learning how each ERC-xxx standard works. The EVM Handbook is a curated list of EVM resources for aspiring blockchain data analysts. Solidity Visual Developer for VS Code is a helpful suite of tools for smart contract auditing inside of VS code. Deth.net is a set of Ethereum developer tools that help with blockchain data sleuthing. \n\nZK Zhao's map of the Crypto Data Landscape is helpful for getting a sense of the current crypto data ecosystem. His Chaininsight tool is pretty cool too, and could help you build the next trending dashboard before someone else does. \n\nOther tools listed include DeepDAO, which provides stats on DAOs and their treasuries, and DethCode, which lets you go into an Ethereum smart contract's code to read the comments or the actual logic to help understand the smart contract's emitted data. \n\nThere are also resources for learning about Solidity, such as freeCodeCamp's Learn Solidity Handbook and Ethernaut, a wargame where you \"hack\" a set of smart contracts. Advanced Ethereum Mini Courses assume you have an understanding of Solidity, React, Truffle, and Web3, but are a good resource for understanding how theory applies to practice. \n\nFinally, the Online Ethereum Transaction Decoder is a tool that can be used to decode Ethereum transactions. \n\nOverall, this section of the app technical guide provides a comprehensive list of tools and resources that can be used to learn about and work with Ethereum and smart contracts.",
          "questions": "1. What is the purpose of this app and how does it relate to blockchain technology?\n- The app is called \"Wizard Tools\" and provides a list of non-Dune tools that wizards use to make things. It is unclear how this app specifically relates to blockchain technology.\n\n2. Are there any tools listed that specifically relate to SQL analysis of blockchain data?\n- None of the tools listed in this app technical guide specifically relate to SQL analysis of blockchain data.\n\n3. Are there any resources listed that could help with understanding smart contracts and their data structure?\n- Yes, Sidekik and DethCode are both listed as resources that can help with understanding smart contracts and their data structure."
        },
        {
          "fileName": "utility-queries.md",
          "filePath": "docs/reference/wizard-tools/utility-queries.md",
          "url": "https://dune.com/docs/reference/wizard-tools/utility-queries.md",
          "summary": "# Utility Queries\n\nThis section of the Dune Docs project provides a list of queries that can be used to build other queries. The purpose of this section is to provide a starting point for users who want to create their own custom queries. The queries listed here are created by other users and are available for anyone to use.\n\nThe table provided in this section lists the name and link of each query, as well as the tag associated with it. The tag is used to categorize the queries and make it easier for users to find what they are looking for. The tags used in this section are \"decoding\", \"query starting point\", \"NFT\", and \"parameters\".\n\nFor example, the \"Is my Contract decoded yet\" queries by @0xBoxer are tagged as \"decoding\". These queries can be used to check if a contract has been decoded yet on different networks such as Polygon, xDAI, and BSC. The queries created by @ilemi are tagged as \"query starting point\" and can be used as a starting point for users who want to create their own custom queries. The query created by @hildobby is tagged as \"parameters\" and can be used to get the address from ENS.\n\nIf users have their own queries that they think should be included in this section, they can propose their changes by following the link provided in the description. \n\nOverall, this section of the Dune Docs project is a useful resource for users who want to create their own custom queries. By providing a list of queries that can be used as a starting point, users can save time and effort when creating their own queries.",
          "questions": "1. What is the purpose of the Dune Docs app and how does it relate to blockchain technology?\n- The Dune Docs app provides a list of utility queries that can be used to build queries related to blockchain technology.\n\n2. How can the utility queries listed in the app be used by a blockchain SQL analyst?\n- The utility queries listed in the app can be used as starting points for building more complex queries related to decoding contracts, analyzing event signatures and functions, and retrieving NFTs held by an address.\n\n3. Can users contribute their own utility queries to the Dune Docs app?\n- Yes, users can propose changes and contribute their own utility queries to the Dune Docs app by submitting them through the GitHub repository linked in the app."
        }
      ],
      "folders": [],
      "summary": "The `.autodoc/docs/json/docs/reference/wizard-tools` folder contains a collection of guides and resources that are essential for data analysts and scientists working with Dune Analytics. These guides cover various aspects of blockchain analysis, data visualization, and query building, providing users with a comprehensive understanding of the tools and techniques used in the field.\n\nThe `blockchain-explorers.md` guide offers an overview of the primary web-based explorers for popular blockchains such as Ethereum, Solana, Arbitrum, and more. These explorers are crucial for understanding how certain protocols work and what data needs to be included in queries. For example, a data analyst can use the Etherscan explorer to retrieve data about transactions, addresses, blocks, and fees on the Ethereum blockchain.\n\nThe `helpful-dashboards.md` guide lists tutorial and reference dashboards that can help users learn Dune, Data Analytics, and Blockchain Analysis skills. Tutorial Dashboards, such as Tips and Tricks for Dune V2 Queries and Visualizations, provide valuable insights for learning new skills. Reference Dashboards, like Meta Monitoring, offer useful information for building queries more efficiently.\n\nThe `index.md` guide covers non-Dune tools that are helpful for learning about ERC-xxx standards, EVM resources, smart contract auditing, and blockchain data sleuthing. Resources like OpenZeppelin's ERC-xxx Standards Docs, Solidity Visual Developer for VS Code, and DeepDAO provide users with a comprehensive understanding of Ethereum and smart contracts.\n\nThe `utility-queries.md` guide provides a list of queries that can be used as a starting point for building custom queries. These queries are categorized using tags such as \"decoding\", \"query starting point\", \"NFT\", and \"parameters\". For instance, the \"Is my Contract decoded yet\" queries can be used to check if a contract has been decoded on different networks like Polygon, xDAI, and BSC.\n\nOverall, the guides and resources in the `wizard-tools` folder are invaluable for data analysts and scientists working with Dune Analytics. They offer a comprehensive understanding of blockchain analysis, data visualization, and query building, enabling users to create efficient and accurate queries for their projects.",
      "questions": ""
    }
  ],
  "summary": "The `.autodoc/docs/json/docs/reference` folder contains a variety of app technical guides that provide essential information for users working with the Dune project. These guides cover topics such as citing Dune, Dune Bounties, events, pricing, and support, among others. They are designed to help users understand various aspects of the Dune platform and how to use its features effectively.\n\nFor example, the `citing-dune.md` guide is crucial for users who want to correctly reference and cite Dune queries and dashboards. It emphasizes the importance of crediting the creators of the queries, visualizations, and dashboards shared on the platform. The guide provides specific instructions on how to credit the creators, including a direct link to dune.com, a Dune logo, and a reference to the specific creator(s) of the content. This guide is important for users to understand how to properly credit the creators of the content they use and share.\n\nThe `dune-bounties.md` guide is a comprehensive resource that explains how Dune Analytics empowers projects and wizards to collaborate through $$ incentives. It covers various aspects of the Dune Bounties project, such as task creation, application process, communication, reputation, and payments. This guide is an excellent resource for anyone interested in learning about Dune Analytics and how it empowers projects and Wizards to collaborate through $$ incentives.\n\nThe `events.md` guide covers the Events feature of the Dune app, which is designed to foster a sense of community and encourage user engagement through events. Users can follow the link to the Community Discord provided in the guide and access the events calendar by visiting events.dune.com. This guide provides users with the necessary information to participate in these events and stay informed about upcoming ones.\n\nThe `pricing.md` guide provides detailed information about the pricing feature of the Dune app, including premium accounts, additional features, billing, and query execution. This guide is useful for users who want to learn more about the pricing feature and how to manage their subscriptions.\n\nOverall, the guides in the `.autodoc/docs/json/docs/reference` folder provide concise and relevant information for users who want to understand various aspects of the Dune project. These guides are essential for analysts who are curious about using the project and need clarification on specific features or functionalities.",
  "questions": ""
}