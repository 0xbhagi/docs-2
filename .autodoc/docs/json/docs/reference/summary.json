{
  "folderName": "reference",
  "folderPath": ".autodoc\\docs\\json\\docs\\reference",
  "url": "https://dune.com/tree/master/doc\\docs\\json\\docs\\reference",
  "files": [
    {
      "fileName": "citing-dune.md",
      "filePath": "docs\\reference\\citing-dune.md",
      "url": "https://dune.com/blob/master/reference\\citing-dune.md",
      "summary": "The app technical guide titled \"Citing Dune\" provides instructions on how to correctly reference and cite Dune queries and dashboards. The guide is focused on the app feature of referencing and sharing data on the Dune platform. \n\nThe guide starts by emphasizing that the content on Dune is created by the \"Wizards\" who build the queries, visualizations, and dashboards. It then goes on to explain that any use or mention of data or visualizations found on the platform should reference Dune as the source of such information. The guide provides a format for crediting the creator(s) of the specific query, dashboard, or data. \n\nThe guide also explains how to find the creator's username and the dashboard or query name on the Dune platform. It provides screenshots to illustrate how to locate this information. Additionally, the guide directs users to another page for more information on how to get embed links for visualizations they want to share. \n\nFinally, the guide highlights the limitations of commercial use of the queries and public dashboard on the Dune platform. It warns against copying, transmitting, modifying, or creating derivative works from the original queries and dashboard. It also prohibits any form of exploiting any portion, use, or access to Dune without the express written permission by Dune. \n\nOverall, the \"Citing Dune\" app technical guide provides clear instructions on how to properly reference and cite data and visualizations found on the Dune platform. It also emphasizes the importance of respecting the limitations of commercial use of the queries and dashboard on the platform.",
      "questions": "1. What type of data does Dune Docs provide and how is it sourced?\n   \n   Dune Docs provides queries, visualizations, and dashboards. The data is sourced from the creators (\"Wizards\") who build them.\n\n2. What are the limitations of commercial use for Dune Docs?\n   \n   Any form of copying, transmitting, transferring, modifying or creating derivative works from the original Queries and the public Dashboard or wrapping them in a white label manner for free or resale is strictly prohibited. Similarly, reproducing, sublicensing, transferring, duplicating, copying, selling, reselling, or any other forms of exploiting any portion, use or access to Dune without the express written permission by Dune is not allowed.\n\n3. Is there any information on how to get Embed links for Visualizations on Dune Docs?\n   \n   Yes, for more info on how to get Embed links for Visualizations you want to share, see the page linked in the guide."
    },
    {
      "fileName": "dune-bounties.md",
      "filePath": "docs\\reference\\dune-bounties.md",
      "url": "https://dune.com/blob/master/reference\\dune-bounties.md",
      "summary": "The Dune Bounties technical guide is a comprehensive guide that explains how Dune Analytics empowers projects and Wizards to collaborate through incentive-based analytics tasks. The guide is divided into several sections, each of which provides detailed information on a specific aspect of the Dune Bounties project. \n\nThe guide starts by introducing Dune Analytics as a go-to solution for on-demand crypto analytics. It then highlights the problem of Wizards and Projects not being able to find each other and the lack of organization in analytics tasks. The solution to this problem is the creation of a marketplace that can handle task creation, application process, communication, reputation, and payments. \n\nThe guide then introduces Dune Bounties, which is a bounty board that manages Dune internal bounty programs and is accessible to other projects and organizations. Dune Bounties leverages dework.xyz, which is a web3 native Trello with payments and credentialing. The guide provides detailed instructions on how to use Dune Bounties for both projects and Wizards. \n\nThe guide also explains the two parts of Dune, the App Layer, and the Data Layer. The App Layer contains Queries, Visualizations, and Dashboards, while the Data Layer allows Wizards to produce scalable and persistent work by standardizing and normalizing data. The guide recommends working in the Data Layer first to take care of data engineering before building cool stuff in the App Layer to surface findings. \n\nThe guide also provides a FAQ section that answers common questions about Dune Bounties, such as how much to pay Wizards, whether Dune takes a cut of bounty payments, and how to choose the right applicant. \n\nOverall, the Dune Bounties technical guide is a comprehensive guide that provides detailed information on how to use Dune Bounties for both projects and Wizards. It explains the problem of Wizards and Projects not being able to find each other and the lack of organization in analytics tasks and provides a solution to this problem. The guide also provides detailed instructions on how to use Dune Bounties and how to work in the App Layer and the Data Layer.",
      "questions": "1. What is the purpose of Dune Bounties and how does it relate to blockchain data analysis?\n   \n   Dune Bounties is a marketplace that connects projects in need of web3 analytics with Wizards who want jobs. It allows for task creation, application process, communication, reputation, and payments, and is web3 native. Blockchain SQL analysts might be interested in using this platform to find work or to offer their services to projects in need of analytics.\n\n2. How does Dune's Data Layer work and why is it important for blockchain data analysis?\n   \n   Dune's Data Layer, called Spellbook, allows for scalable and persistent work by standardizing and normalizing data. It enables Wizards to easily work with data as it's cleaned and standardized, and to reference it in other Spellbook tables. This is important for blockchain data analysis because it makes it easier to work with large amounts of data and to build on top of existing work.\n\n3. How does Dune Bounties handle payments and what is the recommended approach for organizing bounties for a project's needs?\n   \n   Dune Bounties uses Dework's native payment feature, where Wizards simply connect their wallet in their Dework profile and get paid as soon as the bounty is paid out by the Project that created the task. The recommended approach for organizing bounties for a project's needs is to first run specific tasks for adding data to Spellbook, then run a Dashboard design contest using Dework's \"multiple submissions\" feature."
    },
    {
      "fileName": "events.md",
      "filePath": "docs\\reference\\events.md",
      "url": "https://dune.com/blob/master/reference\\events.md",
      "summary": "# Events\n\nThis section of the app technical guide covers the events feature of the Dune app. The purpose of this feature is to keep the community informed about upcoming events, both online and in-person. The header provides a brief overview of the feature and encourages users to join the Dune community Discord server to stay connected with other users.\n\nThe guide then goes on to provide instructions on how to access the events calendar on the Dune website. The calendar is hosted on Google Calendar and can be accessed by visiting [events.dune.com](https://events.dune.com). The guide also includes a GIF that demonstrates how to subscribe to the calendar and add it to a user's personal calendar.\n\nOverall, this section of the app technical guide is focused on providing users with information about upcoming events and how to stay connected with the Dune community. It is a useful resource for users who want to stay up-to-date on the latest events and engage with other users. \n\nExample: \nIf a user wants to attend an upcoming Dune event, they can visit the events calendar on the Dune website to see the date, time, and location of the event. They can also subscribe to the calendar to receive notifications about upcoming events. Additionally, the guide encourages users to join the Dune community Discord server to connect with other users and learn from them.",
      "questions": "1. What kind of events does Dune Docs host and how often?\n   - The app technical guide does not provide information on the frequency or type of events hosted by Dune Docs.\n2. Does Dune Docs integrate with any blockchain technology or databases?\n   - The app technical guide does not mention any integration with blockchain technology or databases.\n3. Are there any APIs or developer tools available for integrating Dune Docs events into other applications?\n   - The app technical guide does not provide information on any APIs or developer tools for integrating Dune Docs events into other applications."
    },
    {
      "fileName": "index.md",
      "filePath": "docs\\reference\\index.md",
      "url": "https://dune.com/blob/master/reference\\index.md",
      "summary": "The app technical guide titled \"Reference\" is a section of the Dune Docs project that provides answers to frequently asked questions about the app. The guide covers topics such as the data available in Dune Tables, tools for building dashboards, and where to find Dune events and support. The purpose of this guide is to provide users with a quick and easy way to find answers to their questions.\n\nThe guide is organized into sections that correspond to the different types of questions users may have. For example, the section on Dune Tables provides information on the data available in the app's data tables. The section on building dashboards provides information on the tools that are helpful for this task. The section on events and support provides information on where to find help when needed.\n\nIn addition to answering questions, the guide also includes supplemental resources such as Wizard Tools. These resources are designed to help users in their work as a Wizard.\n\nOverall, the Reference section of the Dune Docs project is a valuable resource for users who need quick answers to their questions. The guide is well-organized and easy to navigate, making it a useful tool for both new and experienced users of the app.",
      "questions": "1. What is the purpose of the Dune Tables and how are they related to blockchain data? \n   - The app technical guide mentions Dune Tables, but it is unclear what data is stored in them and how they relate to blockchain data. \n2. Are there any specific SQL queries or commands that can be used to access the data in Dune Tables? \n   - The guide mentions tools for building dashboards, but it is unclear if there are any specific SQL queries or commands that can be used to access the data in Dune Tables. \n3. What kind of support is available for Dune events and how can it be accessed? \n   - The guide mentions support for Dune events, but it is unclear what kind of support is available and how it can be accessed."
    },
    {
      "fileName": "press-kit.md",
      "filePath": "docs\\reference\\press-kit.md",
      "url": "https://dune.com/blob/master/reference\\press-kit.md",
      "summary": "This app technical guide covers the Press Kit feature of the Dune app. The Press Kit is a collection of Dune's brand assets that can be used by external parties for promotional purposes. The guide provides information on the different types of logos available in the Press Kit and how they should be used.\n\nThe guide starts with an introduction to the Press Kit and its purpose. It then proceeds to describe the different types of logos available in the kit. The first logo described is the Primary - Standard Logo, which is the primary Dune logo and should be used whenever possible. The guide provides an example of the logo and lists the different file formats available for download.\n\nThe next logo described is the Vertical Logo, which is a variation of the primary logo in a vertical format. The guide provides an example of the logo and lists the different file formats available for download.\n\nThe third logo described is the Icon Only logo, which is a simplified version of the Dune logo without the text. The guide provides an example of the logo and lists the different file formats available for download.\n\nFinally, the guide provides a link to download the complete set of all logos available in the Press Kit.\n\nOverall, this guide provides a comprehensive overview of the different logos available in the Dune Press Kit and how they should be used. It is a useful resource for external parties who want to use Dune's brand assets for promotional purposes.",
      "questions": "1. What is the purpose of the Dune Docs app? \n- The app technical guide does not provide information on the purpose of the Dune Docs app. \n\n2. Are there any specific guidelines or restrictions on the usage of the Dune logos? \n- The app technical guide provides guidelines on the usage of the Dune logos, but it does not mention any restrictions. \n\n3. Is there any information on the file formats of the logo images provided? \n- The app technical guide provides information on the file formats of the logo images, including SVG and PNG."
    },
    {
      "fileName": "pricing.md",
      "filePath": "docs\\reference\\pricing.md",
      "url": "https://dune.com/blob/master/reference\\pricing.md",
      "summary": "The Pricing section of the Dune app technical guide provides information on the premium plans offered by Dune and the additional features that come with them. The guide lists the features of the premium plan, including private queries and dashboards, CSV exports, faster executions, no Dune watermarks, and processing for up to six queries at once. The guide also provides a link to the pricing page where users can learn more about the plans and get started. \n\nThe FAQ section of the guide provides answers to general questions about billing history, upgrading, downgrading, or canceling subscriptions, and how billing works when upgrading or downgrading. The guide also explains which query engine will be billed and what to do if users have more questions. \n\nThe Query Execution section of the guide provides information on the performance tiers and the query engine they support. The guide explains the performance difference between tiers and when the rate for additional executions kicks in. The guide also explains how users can limit premium query usage when they have reached their limit to avoid paying extra fees. \n\nThe Features section of the guide provides information on what happens when users add a private query to a public dashboard and whether they can embed private queries on other websites. The guide also explains what happens to watermarks for Elite users. \n\nOverall, the guide provides a comprehensive overview of the premium plans offered by Dune, how billing works, and the additional features that come with the premium plans. The guide also provides answers to frequently asked questions about billing, query execution, and features.",
      "questions": "1. What additional features are available with Dune Premium accounts?\n- Dune Premium accounts offer private queries and dashboards, CSV exports, faster executions, no Dune watermarks, and processing for up to 6 queries at once.\n\n2. What is the difference in performance between the pricing tiers?\n- Each tier has 2-4x the amount of computational power of the previous tier, and the higher the tier, the faster queries will run.\n\n3. How does billing work when upgrading or downgrading a subscription?\n- Upgrading immediately resets the billing cycle to the day of the upgrade, while downgrades are applied at the end of the billing cycle. Unused days of the current plan will be refunded pro rata when upgrading."
    },
    {
      "fileName": "recommended-reading.md",
      "filePath": "docs\\reference\\recommended-reading.md",
      "url": "https://dune.com/blob/master/reference\\recommended-reading.md",
      "summary": "The \"Recommended Reading\" technical guide is a resource for users of the Dune Docs project who are interested in web3 data analytics. The guide provides a list of recommended reading resources that can help users in their journey. The guide is divided into several sections, each focusing on a specific topic related to web3 data analytics.\n\nThe first section of the guide is \"Wizard Content,\" which features content created by members of the Wizard community. The section provides links to their work, including \"Journey to the Centre of Arakis\" by @1chioku, \"Andrew Hong's Mirror.xyz\" by @ilemi, and \"NiftyTable\" by @niftytable.\n\nThe next section is \"General Blockchain Info,\" which provides a link to \"Immersion Den,\" a collection of web3 information sources. The following section is \"DeFi,\" which provides a link to \"Biggest DeFi Hacks.\"\n\nThe guide also includes sections on DAOs, Bridges/L2, EIPs, News and Info, Newsletters, and Cool Blockchain Data Websites. Each section provides links to relevant resources that can help users in their web3 data analytics journey.\n\nFor example, the \"DAOs\" section provides links to \"DAOs: Absorbing the Internet\" and \"DAO Central - Learn about DAOs.\" The \"Bridges/L2\" section provides a link to \"The ultimate guide to L2s on Ethereum.\" The \"EIPs\" section provides a link to the Ethereum Improvement Proposals website.\n\nOverall, the \"Recommended Reading\" technical guide is a valuable resource for users of the Dune Docs project who are interested in web3 data analytics. The guide provides a comprehensive list of recommended reading resources that can help users stay up-to-date with the latest developments in the field.",
      "questions": "1. What is the purpose of the Dune Docs app and how does it relate to blockchain SQL analysis?\n- The app technical guide does not provide information on the purpose of the Dune Docs app or its relation to blockchain SQL analysis.\n\n2. Are there any resources specifically related to blockchain SQL analysis included in the recommended reading?\n- The recommended reading includes resources related to web3 data analytics in general, but does not specifically mention blockchain SQL analysis.\n\n3. Can users suggest additional resources to be included in the recommended reading list?\n- Yes, users can suggest additional resources to be included in the recommended reading list by proposing changes on the GitHub page provided in the app technical guide."
    },
    {
      "fileName": "support-feedback.md",
      "filePath": "docs\\reference\\support-feedback.md",
      "url": "https://dune.com/blob/master/reference\\support-feedback.md",
      "summary": "The app technical guide titled \"Support & Feedback\" provides users with information on how to get support and leave feedback for the Dune app. The guide is divided into two main sections: \"How to Get Support\" and \"How to Leave Feedback.\" \n\nUnder \"How to Get Support,\" users are provided with two options for getting help. The first option is to use the search bar located above the guide to search for answers. The second option is to join the Dune Discord server and ask for help in one of the relevant support channels. The guide lists seven different channels, each with a specific focus, such as query questions, data tables, and API-related questions. \n\nUnder \"How to Leave Feedback,\" users are provided with three different channels for leaving feedback. The first channel is the Canny board, where users can leave general feedback about the Dune app. The second channel is the \"bugs\" channel in the Dune Discord server, where users can report any bugs they encounter. The third channel is the \"feature-requests\" channel, where users can suggest new features for the app. \n\nThe guide also provides information on how to report issues related to user accounts, billing, or other administrative problems. Users are instructed to send an email to the support team at support@dune.com. \n\nOverall, this guide is a helpful resource for users who need assistance with the Dune app or want to provide feedback. The guide provides clear instructions on how to get help and leave feedback, and it directs users to the appropriate channels for their specific needs. The guide also includes helpful visuals, such as a screenshot of the pencil icon users can click to submit feedback fixes or additions.",
      "questions": "1. What is the purpose of the Dune app and what kind of data does it handle?\n- The app technical guide does not provide information on the purpose or data handled by the Dune app.\n\n2. Are there any APIs available for accessing data in the Dune app?\n- Yes, there is a support channel (#dune-api) specifically for API related questions.\n\n3. How can users contribute to the improvement of the Dune app documentation?\n- Users can click the pencil icon to the right of the page title and open a GitHub issue or submit a pull request to provide feedback fixes or additions to the documentation."
    },
    {
      "fileName": "v1-sunsetting.md",
      "filePath": "docs\\reference\\v1-sunsetting.md",
      "url": "https://dune.com/blob/master/reference\\v1-sunsetting.md",
      "summary": "The technical guide titled \"Sunsetting Dune V1\" provides information on the decommissioning of the V1 platform of the Dune Engine. The guide explains that with the release of the Polygon decoded tables on Dune Engine V2, all raw and decoded data that was on V1 is now available on V2. As a result, the V1 platform is being decommissioned, and the guide provides details on the decommissioning process.\n\nThe guide explains that once a chain is commissioned, queries referencing the V1 version won't be editable anymore until the user logs in and selects DuneV2 from the data explorer drop-down to re-run them as V2 queries. The guide also notes that no new contracts submitted for decoding on all blockchains will be decoded on V1, and no new Abstraction PRs will be merged on V1.\n\nThe guide provides a decommissioning schedule for Dune V1 databases, which includes the kickoff date for each blockchain, the date when the blockchain will be removed from the blockchain selection dropdown, the date when V1 queries for the given blockchain will become read-only, and the date when no new data will be ingested, and no new query executions on V1 databases will be allowed.\n\nThe guide also provides links to resources where users can learn more about how V2 works, how searching in V2 works, and general insights on Dune V2. Users can check out the DuneSQL to learn more about how V2 works, the Data Explorer guide to learn more about how searching in V2 works, and watch Dune Arcana videos for general insights. Additionally, users can join live Office Hours or ask in the #query-questions Discord channel to ask questions.\n\nOverall, the guide provides a comprehensive overview of the decommissioning process of the V1 platform of the Dune Engine and provides users with the necessary information to transition to the V2 platform.",
      "questions": "1. What is the reason for sunsetting Dune V1 and transitioning to V2 as the primary platform?\n- The reason for sunsetting Dune V1 and transitioning to V2 as the primary platform is due to the release of the Polygon decoded tables on Dune Engine V2, which now has all Raw and Decoded data that was on V1 on V2.\n\n2. What are the implications for existing and new contracts submitted for decoding on all blockchains?\n- No new contracts that are submitted for decoding (on all blockchains) will be decoded on V1, they will only be decoded on V2 (already decoded contracts will continue to work as normal).\n\n3. What is the timeline for decommissioning each blockchain on Dune V1?\n- The timeline for decommissioning each blockchain on Dune V1 is provided in the Decommissioning Schedule for Dune V1 Databases table, which includes the kickoff date for decommissioning, removal of the blockchain from the blockchain selection dropdown, read-only access to V1 queries, and the end of decommissioning."
    }
  ],
  "folders": [
    {
      "folderName": "dune-v2",
      "folderPath": ".autodoc\\docs\\json\\docs\\reference\\dune-v2",
      "url": "https://dune.com/tree/master/doc\\docs\\json\\docs\\reference\\dune-v2",
      "files": [
        {
          "fileName": "dunesql-changes.md",
          "filePath": "docs\\reference\\dune-v2\\dunesql-changes.md",
          "url": "https://dune.com/blob/master/reference\\dune-v2\\dunesql-changes.md",
          "summary": "The DuneSQL migration technical guide provides documentation on the changes made to DuneSQL on March 2nd, 2023. The guide is divided into several sections, each with a specific focus. \n\nThe warning section highlights the issues with datatypes in some tables in DuneSQL and provides a temporary workaround for the affected tables. \n\nThe DuneSQL Alpha Deprecation and Data Type Changes section explains the changes made to DuneSQL. The changes include the use of the same data types as the underlying EVM blockchain, support for uint256 and int256, correction of an ancient mistake in the database, and modification of the from_hex native function. The section also explains the implications of these changes for users, including improved query speed, easier query maintenance, and full wei-level precision calculations. \n\nThe What do I need to do? section provides a step-by-step guide on what users need to do to adjust their queries to use compatible functions before the deprecation date. The section also highlights common errors and fixes, such as casting varchar to varbinary, casting to uint256, using bytearray_substring, and using bytearray_starts_with instead of LIKE expression. \n\nThe Changes section provides a summary of the changes made to DuneSQL, including the renaming of logs.topicX columns to topic0, topic1, topic2, topic3, and the removal of automatic coercion of breaking type changes of contract updates. \n\nOverall, the DuneSQL migration technical guide provides a comprehensive overview of the changes made to DuneSQL and the implications for users. The guide is useful for developers and users who want to understand the changes and how to adjust their queries to use compatible functions.",
          "questions": "1. What are the current issues with datatypes in some tables in DuneSQL and when are they expected to be resolved?\n- The current issues with datatypes in some tables in DuneSQL include some Spellbook tables, `flashbots.*`, `reservoir.*`, and `snapshot.*` and `cowswap.*`. The issue with `prices.usd` has already been fixed on March 6th, 2023. The issues with `flashbots.*` and `reservoir.*` are expected to be fixed by March 10th, 2023, while the issues with `snapshot.*` and `cowswap.*` are still to be determined.\n\n2. What are the benefits of switching to the `varbinary` datatype in DuneSQL?\n- Switching to the `varbinary` datatype in DuneSQL should significantly improve the speed of queries by approximately 30%. It also eliminates the need for string casts and conversions, making queries more readable and easier to maintain. Additionally, the introduction of `uint256` and `int256` allows for full wei-level precision calculations.\n\n3. What are some common errors and fixes when working with the new data types in DuneSQL?\n- Some common errors and fixes when working with the new data types in DuneSQL include casting varchar to varbinary using `from_hex(x))`, casting to uint256 using `cast(xxx as uint256)`, using `bytearray_substring` and `bytearray_starts_with` instead of LIKE expression, and adjusting the indexing of topics from `Topic1` to `Topic0`, `Topic2` to `Topic1`, etc."
        },
        {
          "fileName": "index.md",
          "filePath": "docs\\reference\\dune-v2\\index.md",
          "url": "https://dune.com/blob/master/reference\\dune-v2\\index.md",
          "summary": "The Dune V2 technical guide provides an overview of the new features and updates to the Dune Engine V2, which is a query engine and database that enables users to query, extract, and visualize blockchain data. The guide explains that Dune V2 brings a new level of performance, scalability, and functionality to the core tools that let Wizards query, extract, and visualize the vast amounts of blockchain data available. \n\nThe guide highlights two significant updates to the Dune V2: a scalable column-oriented database and two new query engines, Dune SQL and Spark SQL. The new database architecture is transitioning away from a PostgreSQL database to a scalable columnar database. The difference between the two systems is that V2 uses a columnar storage format in contrast to PostgreSQL’s row-oriented approach. Traditional indexes are replaced by block range indexes, which are chunk level min/max values. \n\nThe guide also explains that DuneV2 leverages two different query engines as it transitions away from a PostgreSQL database to a data lake house. Spark SQL was the initial choice for a V2 Query engine, but after gathering data and feedback from the Beta release, the team realized it won’t allow them to continue to have the best blockchain data querying experience as they scale. The solution is Dune SQL powered by Trino, and it is live in alpha. \n\nThe guide also explains that abstractions in DuneV2 run on dbt (data build tool), which enables analytics engineers to transform data in their warehouses by simply writing select statements, then dbt handles turning these select statements into tables and views. Spells currently run on Spark SQL in Dune v2 but can also be queried on Dune SQL. \n\nThe guide provides links to resources where users can find more information about the new query engines and built-in functions. The guide also encourages users to reach out to the Dune team for help and feedback. \n\nOverall, the Dune V2 technical guide provides a comprehensive overview of the new features and updates to the Dune Engine V2, which is a query engine and database that enables users to query, extract, and visualize blockchain data. The guide is useful for developers and data analysts who want to learn more about the new features and updates to the Dune Engine V2.",
          "questions": "1. What is the difference between Dune V2's column oriented database and PostgreSQL's row oriented approach?\n- Dune V2's database uses a columnar storage format, while PostgreSQL uses a row oriented approach.\n2. Why did the Dune team decide to transition from Spark SQL to Dune SQL?\n- After gathering data and feedback from their Beta release, the Dune team realized that Dune SQL powered by Trino would provide a better blockchain data querying experience as they scale.\n3. What is the best way to get help from the Dune team and Wizard community when encountering issues with Dune V2?\n- The best place to get help is the #dune-sql Discord channel, and users can also send an email to dunesql-feedback@dune.com for assistance with updating and optimizing the app."
        },
        {
          "fileName": "query-engine.md",
          "filePath": "docs\\reference\\dune-v2\\query-engine.md",
          "url": "https://dune.com/blob/master/reference\\dune-v2\\query-engine.md",
          "summary": "The app technical guide covers the transition from PostgreSQL to Dune SQL and Spark SQL query engines in Dune V2. It provides a detailed comparison of syntax and operator differences between the three engines, including examples for various operations such as casting, indexing, type conversions, and aggregate functions.\n\nThe guide also explains the data types and functions available in Dune SQL, with a focus on numerical types, byte array functions, and byte array to numeric functions. It provides a comprehensive list of helper functions for working with byte arrays and their respective descriptions.\n\nAdditionally, the guide explains how to query queries as views in Dune SQL using the `query_<queryId>` identifier and provides an example for reference. It also highlights the limitations and requirements for using this feature.\n\nFinally, the guide suggests using Google and the respective documentation for Spark SQL and Trino SQL to find answers to specific questions. It also recommends the #dune-sql Discord channel for community support and encourages users to provide feedback via email.",
          "questions": "1. **What are the differences in syntax and keyword operators between PostgreSQL, Spark SQL, and Dune SQL?**\n\n   The app technical guide provides a syntax comparison table that highlights the key differences between PostgreSQL, Spark SQL, and Dune SQL. Some examples include differences in casting hex/bytea to a number, handling decimals for prices.usd, and aggregate functions.\n\n2. **What are the available byte array functions in Dune SQL?**\n\n   Dune SQL offers several byte array functions such as `bytearray_concat`, `bytearray_length`, `bytearray_ltrim`, `bytearray_position`, `bytearray_replace`, `bytearray_reverse`, `bytearray_rtrim`, `bytearray_starts_with`, and `bytearray_substring`. These functions simplify interactions with byte arrays by accounting for the `0x`-prefix and using byte index instead of character index.\n\n3. **How can I query queries as views in Dune SQL?**\n\n   In Dune SQL, you can query non-parameterized queries as views using the identifier `query_<queryId>`. For example, `select * from query_1234`. Note that all output columns of the query being queried must be named, parameterized queries are not supported, only public queries can be queried, only saved queries can be queried, and only queries written in Dune SQL can be queried."
        }
      ],
      "folders": [],
      "summary": "The Dune V2 technical guide, located in the `.autodoc\\docs\\json\\docs\\reference\\dune-v2` folder, focuses on the updates and new features introduced in the Dune Engine V2, a query engine and database for blockchain data. The guide is essential for developers and data analysts who want to learn more about the new features and updates to the Dune Engine V2.\n\nThe guide covers the following key aspects:\n\n1. **DuneSQL migration technical guide (dunesql-changes.md)**: This guide provides a comprehensive overview of the changes made to DuneSQL and their implications for users. It includes a step-by-step guide on adjusting queries to use compatible functions before the deprecation date and highlights common errors and fixes. This guide is useful for developers and users who want to understand the changes and how to adjust their queries accordingly.\n\n2. **Dune V2 overview (index.md)**: This guide provides an overview of the new features and updates to the Dune Engine V2, including the transition to a scalable column-oriented database and the introduction of two new query engines, Dune SQL and Spark SQL. The guide also explains the use of dbt (data build tool) for data transformation and the support for Spells in Dune v2. This guide is useful for developers and data analysts who want to learn more about the new features and updates to the Dune Engine V2.\n\n3. **Query engine transition (query-engine.md)**: This guide covers the transition from PostgreSQL to Dune SQL and Spark SQL query engines in Dune V2. It provides a detailed comparison of syntax and operator differences between the three engines, including examples for various operations such as casting, indexing, type conversions, and aggregate functions. The guide also explains the data types and functions available in Dune SQL, with a focus on numerical types, byte array functions, and byte array to numeric functions. This guide is useful for developers and data analysts who want to understand the differences between the query engines and how to work with them effectively.\n\nOverall, the guides in this folder provide a comprehensive understanding of the new features and updates in the Dune Engine V2, enabling users to query, extract, and visualize blockchain data more efficiently. The guides are essential for developers and data analysts who want to learn more about the new features and updates to the Dune Engine V2 and how they might fit into the larger project or work with other parts of the project.",
      "questions": ""
    },
    {
      "folderName": "faq",
      "folderPath": ".autodoc\\docs\\json\\docs\\reference\\faq",
      "url": "https://dune.com/tree/master/doc\\docs\\json\\docs\\reference\\faq",
      "files": [
        {
          "fileName": "does-dune-have-a-token.md",
          "filePath": "docs\\reference\\faq\\does-dune-have-a-token.md",
          "url": "https://dune.com/blob/master/reference\\faq\\does-dune-have-a-token.md",
          "summary": "# App Technical Guide: Does Dune Have a Token?\n\nThis guide covers the topic of whether or not the Dune app has a token. The purpose of this guide is to provide a clear answer to this question for users who may be wondering about the app's authentication system.\n\nThe header \"Does Dune have a Token?\" is a high-level question that sets the tone for the rest of the guide. The answer is provided in the next section, which states that \"Dune does not have a token.\" This information is important for users who may be looking for a token-based authentication system and need to know that Dune does not offer this feature.\n\nOverall, this guide is relevant to the app folder of the Dune Docs project, as it pertains to the app's authentication system. It is a short and straightforward guide that provides a clear answer to a common question. \n\nExample: \nIf a user is trying to integrate Dune with another app that requires a token-based authentication system, they can refer to this guide to confirm that Dune does not offer this feature. This can save the user time and effort in trying to implement a feature that is not available in the app.",
          "questions": "1. What is the purpose of Dune Docs and how does it relate to blockchain technology? \n- This app technical guide does not provide information on the purpose of Dune Docs or its relation to blockchain technology. \n\n2. Is there any integration between Dune Docs and blockchain databases? \n- This app technical guide does not provide information on any integration between Dune Docs and blockchain databases. \n\n3. Are there any plans to introduce a token for Dune Docs in the future? \n- This app technical guide states that Dune does not have a token, but it does not provide information on any plans to introduce one in the future."
        },
        {
          "fileName": "does-dune-have-an-api.md",
          "filePath": "docs\\reference\\faq\\does-dune-have-an-api.md",
          "url": "https://dune.com/blob/master/reference\\faq\\does-dune-have-an-api.md",
          "summary": "# App Technical Guide: Does Dune have an API?\n\nThis guide covers the topic of whether Dune has an API and how to access it. The purpose of this guide is to inform users that Dune does indeed have an API and to provide instructions on how to obtain access to it. \n\nThe first header confirms that Dune has an API. The second header provides instructions on how to obtain access to the API. Users must sign up for a paid plan and add on API access to gain access to the API. The guide provides a link to pricing details for users to determine which plan is best for them. \n\nThe third header provides a link to learn more about how to use the API. This section is likely to contain more detailed information on how to use the API, including authentication, endpoints, and parameters. \n\nThe final header provides options for users who do not have API access. Paid plan users can export results as CSV, while anyone can embed Dune charts on their page for free by clicking \"Embed\" on any query visualization. \n\nOverall, this guide is a brief overview of Dune's API and how to access it. It is likely that users who are interested in using the API will need to refer to additional documentation to fully understand how to use it. \n\nExample: \n\nIf a user is interested in using Dune's API, they can refer to this guide to learn that Dune does indeed have an API and how to obtain access to it. They can then follow the link to learn more about how to use the API and refer to additional documentation as needed. If a user does not have API access, they can still export results as CSV or embed Dune charts on their page for free.",
          "questions": "1. What kind of data can be accessed through Dune's API?\n- The app technical guide does not provide information on the specific data that can be accessed through Dune's API.\n\n2. Is there a limit to the number of API requests that can be made?\n- The app technical guide does not mention any limits on the number of API requests that can be made.\n\n3. Are there any authentication or security measures in place for accessing the API?\n- The app technical guide mentions that API access is only available to paid plan users, but does not provide information on any authentication or security measures in place for accessing the API."
        },
        {
          "fileName": "how-are-results-refreshing.md",
          "filePath": "docs\\reference\\faq\\how-are-results-refreshing.md",
          "url": "https://dune.com/blob/master/reference\\faq\\how-are-results-refreshing.md",
          "summary": "# App Technical Guide: How often do results get refreshed?\n\nThis technical guide provides information on how often results get refreshed in the Dune app. The guide starts by directing users to the Meta Monitoring dashboard to see the current time it takes for new data to be added to Dune. \n\nThe guide then explains how results get refreshed in the app. When a visualization is viewed on a query page or dashboard, the Dune backend inspects the age of the most recent result. If the result is stale (currently defined as >3 hours old), Dune automatically queues an execution for this query and runs it in the background. This ensures that dashboards are always kept up to date when they are being viewed, and the query creator does not need to set a refresh schedule. \n\nThe guide also notes that the query execution queue is separate from each individual user's queue when they create and run queries in the query editor. \n\nOverall, this guide provides important information on how the Dune app keeps results up to date and ensures that dashboards are always displaying the most recent data. It also highlights the Meta Monitoring dashboard as a resource for users to check the current time it takes for new data to be added to Dune. \n\nExample: If a user is viewing a dashboard and notices that the data is not up to date, they can refer to this guide to understand how results get refreshed in the app. They can also check the Meta Monitoring dashboard to see if there are any delays in adding new data to Dune.",
          "questions": "1. What is the definition of \"stale\" data in this app and how is it determined?\n   \n   The definition of \"stale\" data in this app is data that is more than 3 hours old. This is determined by the Dune backend when inspecting the age of the most recent result.\n\n2. Is there a way for users to manually refresh the data or set a custom refresh schedule?\n   \n   It is not mentioned in the app technical guide whether users can manually refresh the data or set a custom refresh schedule. However, it is stated that dashboards will always be kept up to date when they are being viewed and the query creator does not need to set a refresh schedule.\n\n3. How does the query execution queue work and is there a limit to the number of queries that can be queued at once?\n   \n   The app technical guide mentions that the query execution queue is separate from each individual user's queue when they create and run queries in the query editor. However, it does not provide information on how the query execution queue works or if there is a limit to the number of queries that can be queued at once."
        },
        {
          "fileName": "how-does-dune-get-its-data.md",
          "filePath": "docs\\reference\\faq\\how-does-dune-get-its-data.md",
          "url": "https://dune.com/blob/master/reference\\faq\\how-does-dune-get-its-data.md",
          "summary": "# Overview\n\nThis app technical guide provides an explanation of how Dune, a project focused on blockchain data analysis, obtains its data. The guide explains that Dune works with node providers across the industry to ingest raw historical data from various blockchains. The guide also clarifies that state data is not included in the data obtained by Dune. \n\n# How Dune Gets Its Data\n\nThe guide explains that Dune collaborates with node providers to obtain data from various blockchains. This data is then ingested into Dune's database. The guide emphasizes that Dune does not discriminate against any smart contract and that users can submit any contract via the decoding page. The only prerequisite for this is an ABI so that Dune can decode the contract. \n\n# Example\n\nFor instance, if a user wants to work with a smart contract on Dune, they can submit the contract via the decoding page. Dune will then decode the contract using the ABI and ingest the data into its database. This allows users to work with the contract in a matter of hours. \n\nOverall, this guide provides a clear explanation of how Dune obtains its data and highlights the importance of ABIs in the process. It is a useful resource for anyone looking to understand the data acquisition process in Dune.",
          "questions": "1. What blockchains does Dune Docs currently support for data ingestion?\n- The app technical guide does not provide specific information on which blockchains Dune Docs supports for data ingestion.\n\n2. Does Dune Docs provide access to state data?\n- The app technical guide states that Dune Docs does not include state data in its data ingestion process.\n\n3. How does Dune Docs decode smart contracts submitted through its decoding page?\n- The app technical guide mentions that the only prerequisite for submitting a smart contract through the decoding page is an ABI, which is used to decode the contract."
        }
      ],
      "folders": [],
      "summary": "The FAQ folder in the Dune Docs project contains several guides that answer common questions and provide important information about the app, its features, and how it works. These guides are designed to help users understand various aspects of the Dune app and how to use it effectively.\n\n1. **Does Dune Have a Token?**: This guide clarifies that Dune does not have a token-based authentication system. This information is useful for users who are looking to integrate Dune with other apps that require token-based authentication. By referring to this guide, users can save time and effort in trying to implement a feature that is not available in the app.\n\n2. **Does Dune have an API?**: This guide informs users that Dune has an API and provides instructions on how to obtain access to it. Users interested in using Dune's API can refer to this guide to learn about the API and how to gain access. They can then follow the provided link to learn more about using the API and refer to additional documentation as needed. For users without API access, they can still export results as CSV or embed Dune charts on their page for free.\n\n3. **How often do results get refreshed?**: This guide explains how Dune keeps results up to date and ensures that dashboards are always displaying the most recent data. Users can refer to this guide to understand how results get refreshed in the app and check the Meta Monitoring dashboard to see if there are any delays in adding new data to Dune. This information is helpful for users who want to ensure that their dashboards are always displaying the most accurate and up-to-date information.\n\n4. **How does Dune get its data?**: This guide provides an explanation of how Dune obtains its data from various blockchains by collaborating with node providers. Users can refer to this guide to understand the data acquisition process in Dune and learn about the importance of ABIs in the process. For example, if a user wants to work with a smart contract on Dune, they can submit the contract via the decoding page, and Dune will decode the contract using the ABI and ingest the data into its database.\n\nOverall, the guides in the FAQ folder provide valuable information for users who are curious about various aspects of the Dune app. These guides can help users better understand the app's features and how to use them effectively, ultimately enhancing their experience with the Dune project.",
      "questions": ""
    },
    {
      "folderName": "wizard-tools",
      "folderPath": ".autodoc\\docs\\json\\docs\\reference\\wizard-tools",
      "url": "https://dune.com/tree/master/doc\\docs\\json\\docs\\reference\\wizard-tools",
      "files": [
        {
          "fileName": "blockchain-explorers.md",
          "filePath": "docs\\reference\\wizard-tools\\blockchain-explorers.md",
          "url": "https://dune.com/blob/master/reference\\wizard-tools\\blockchain-explorers.md",
          "summary": "# Blockchain Explorers\n\nThis technical guide provides an overview of Blockchain Explorers, which are essential tools for Data Analysts/Scientists. The guide explains that Blockchain Explorers allow users to explore a blockchain by providing an online interface to retrieve data about transactions, addresses, blocks, and fees, among others. \n\nThe guide lists the primary web-based explorers for the most popular blockchains, including Ethereum, Solana, Arbitrum, Polygon, Optimism, Avalanche C-Chain, Binance Smart Chain, and Gnosis Chain. Each blockchain is accompanied by a link to its respective explorer. \n\nThe guide emphasizes that while Blockchain Explorers may not offer the same level of functionality as Dune, they are indispensable for understanding how certain protocols work and what data is required for queries. \n\nFor example, the Ethereum blockchain is explored using Etherscan, which provides a comprehensive view of the Ethereum network, including real-time data on transactions, blocks, and addresses. Similarly, Solscan is used to explore the Solana blockchain, while Arbiscan is used for the Arbitrum blockchain. \n\nOverall, this technical guide provides a useful introduction to Blockchain Explorers and their importance in the world of data analysis and science.",
          "questions": "1. What is the purpose of this app and how does it relate to blockchain data analysis?\n- The app is a collection of web-based blockchain explorers for popular blockchains, which allow data analysts/scientists to retrieve information about transactions, addresses, blocks, and fees. \n\n2. Are there any other blockchains that this app supports besides the ones listed?\n- The app only lists the primary web-based explorers for the most popular blockchains, so it's possible that there are other blockchains not included in this list. \n\n3. Does this app provide any tools or features beyond just retrieving blockchain data?\n- The app does not provide any tools or features beyond retrieving blockchain data, but it is noted that the explorers listed are not as comprehensive as the Dune platform."
        },
        {
          "fileName": "helpful-dashboards.md",
          "filePath": "docs\\reference\\wizard-tools\\helpful-dashboards.md",
          "url": "https://dune.com/blob/master/reference\\wizard-tools\\helpful-dashboards.md",
          "summary": "# Helpful Dashboards\n\nThis technical guide is focused on the app folder of the Dune Docs project. The guide provides a list of helpful dashboards for those looking to learn new Dune, Data Analytics, and Blockchain Analysis skills. The dashboards are divided into two categories: Tutorial Dashboards and Reference Dashboards.\n\nThe Tutorial Dashboards are great for learning new skills. The dashboards include Tips and Tricks for Dune V2 Queries and Visualizations, Data Visualization Cheat Sheet, Event and Function Signature Sleuthing, Getting Started, and Contract Quickstart. Each dashboard is created by a different user and provides a unique perspective on learning Dune.\n\nThe Reference Dashboards are helpful to refer to while building Queries. The dashboards include Meta Monitoring, Is my Contract Decoded Yet?, and Dune DB Guide. These dashboards are created by different users and provide a reference point for building queries.\n\nThe technical guide also provides a link to submit a GitHub Pull Request for any other dashboard that is helpful. If the dashboard is deemed helpful, it will be added to the list.\n\nFor example, if a user is looking to learn Dune V2 Queries and Visualizations, they can refer to the Tips and Tricks for Dune V2 Queries and Visualizations dashboard created by @springzhang. This dashboard provides tips and tricks for creating queries and visualizations in Dune V2.\n\nOverall, this technical guide provides a list of helpful dashboards for those looking to learn Dune, Data Analytics, and Blockchain Analysis skills. The dashboards are created by different users and provide a unique perspective on learning Dune.",
          "questions": "1. What is the purpose of the Dune Docs app?\n   \n   The app is not clearly defined in this technical guide, so a blockchain SQL analyst might have to look for additional documentation or context to understand the app's purpose.\n\n2. What kind of data analytics and blockchain analysis skills can be learned from the tutorial dashboards?\n   \n   The technical guide mentions that the tutorial dashboards are great for learning new Dune, Data Analytics, and Blockchain Analysis skills, but it does not provide specific examples or details about what those skills might be.\n\n3. How can a user submit a new dashboard to be added to the list?\n   \n   The technical guide mentions that users can submit a GitHub Pull Request to add a new dashboard to the list, but a blockchain SQL analyst might want more information on the submission process, such as what kind of criteria the Dune Analytics team uses to determine if a dashboard is helpful enough to be added to the list."
        },
        {
          "fileName": "index.md",
          "filePath": "docs\\reference\\wizard-tools\\index.md",
          "url": "https://dune.com/blob/master/reference\\wizard-tools\\index.md",
          "summary": "# Wizard Tools\n\nThis section of the app technical guide provides a list of non-Dune tools that the wizards use to make their work easier. The tools listed here are useful for learning how each ERC-xxx standard works, understanding the current crypto data ecosystem, auditing smart contracts, and digging into smart contracts to understand how they operate and their data structure. \n\nSome of the tools listed in this section include OpenZepplin's ERC-xxx Standards Docs, which are helpful for learning how each ERC-xxx standard works. The EVM Handbook is a curated list of EVM resources for aspiring blockchain data analysts. Solidity Visual Developer for VS Code is a helpful suite of tools for smart contract auditing inside of VS code. Deth.net is a set of Ethereum developer tools that help with blockchain data sleuthing. ZK Zhao's map of the Crypto Data Landscape is helpful for getting a sense of the current crypto data ecosystem. \n\nThe section also includes links to recommended reading lists for a bunch of guides on crypto data topics and projects to check out. DeepDAO provides stats on DAOs and their treasuries. DethCode lets you go into an Ethereum smart contract's code to read the comments or the actual logic can help to understand the smart contract's emitted data. Sidekik is useful for digging into smart contracts to understand how they operate and their data structure. Ethernaut is a wargame where you \"hack\" a set of smart contracts, useful for learning how smart contracts work. Advanced Ethereum Mini Courses are a good resource for understanding how theory applies to practice. \n\nOverall, this section of the app technical guide provides a comprehensive list of tools that can be used to make the work of the wizards easier. The tools listed here are useful for anyone who wants to learn more about blockchain data analysis, smart contract auditing, and the current crypto data ecosystem.",
          "questions": "1. What is the purpose of this app and how does it relate to blockchain technology?\n- The app technical guide provides a list of non-Dune tools that can be used by blockchain data analysts to understand and work with smart contracts and Ethereum transactions.\n\n2. Are there any specific tools listed that are particularly useful for analyzing blockchain data using SQL?\n- It is not explicitly stated in the app technical guide which tools are specifically useful for analyzing blockchain data using SQL.\n\n3. Are there any limitations or potential issues with using these tools for blockchain data analysis?\n- The app technical guide does not provide any information on limitations or potential issues with using these tools for blockchain data analysis."
        },
        {
          "fileName": "utility-queries.md",
          "filePath": "docs\\reference\\wizard-tools\\utility-queries.md",
          "url": "https://dune.com/blob/master/reference\\wizard-tools\\utility-queries.md",
          "summary": "# Utility Queries\n\nThis section of the Dune Docs project provides a list of queries that can help users build their own queries. The queries are organized in a table that includes the name/link and tag of each query. Users can propose changes to the list by following the link provided.\n\nThe queries listed in this section are focused on decoding contracts, starting points for queries, and NFTs. For example, the \"Is my Contract decoded yet\" queries by @0xBoxer and @chenxiangli are focused on decoding contracts on different networks (Ethereum, Polygon, xDAI, and BSC). These queries can be used to check if a contract has been decoded yet, which can be useful for developers who want to analyze the contract's data.\n\nThe queries by @ilemi are focused on providing starting points for queries related to common event signatures, functions called by signers, and functions called in traces for a contract. These queries can be used as a foundation for more complex queries that require this information.\n\nFinally, the query by @ilemi for getting all NFTs held by an address (ERC721 + ERC1155) is focused on NFTs. This query can be used to retrieve information about the NFTs held by a specific address, which can be useful for analyzing NFT markets.\n\nOverall, this section of the Dune Docs project provides a useful list of queries that can help users build their own queries. The queries are focused on decoding contracts, starting points for queries, and NFTs, and can be used as a foundation for more complex queries.",
          "questions": "1. What is the purpose of the Dune Docs app and how does it relate to blockchain SQL analysis?\n- The Dune Docs app provides a list of utility queries that can be used as starting points for building queries related to blockchain data analysis using SQL.\n2. How can a user propose changes or additions to the list of utility queries?\n- A user can propose changes or additions to the list of utility queries by clicking on the provided link to the app's GitHub repository and submitting a pull request.\n3. What types of blockchain data analysis can be performed using the utility queries provided in the app?\n- The utility queries provided in the app can be used for decoding contracts, finding common event signatures and functions called, retrieving NFTs held by an address, and getting addresses from ENS."
        }
      ],
      "folders": [],
      "summary": "The `.autodoc\\docs\\json\\docs\\reference\\wizard-tools` folder contains a collection of technical guides that focus on providing resources, tools, and examples to help users better understand and utilize the Dune Docs project. These guides cover various aspects of the project, such as Blockchain Explorers, Helpful Dashboards, Wizard Tools, and Utility Queries.\n\nThe `blockchain-explorers.md` guide offers an overview of Blockchain Explorers, which are essential tools for Data Analysts/Scientists. It lists the primary web-based explorers for popular blockchains and emphasizes their importance in understanding how certain protocols work and what data is required for queries. For instance, Etherscan is used to explore the Ethereum blockchain, providing real-time data on transactions, blocks, and addresses.\n\nThe `helpful-dashboards.md` guide focuses on providing a list of helpful dashboards for users looking to learn new Dune, Data Analytics, and Blockchain Analysis skills. These dashboards are divided into Tutorial Dashboards and Reference Dashboards, each created by different users and offering unique perspectives on learning Dune. For example, the Tips and Tricks for Dune V2 Queries and Visualizations dashboard by @springzhang provides valuable insights for creating queries and visualizations in Dune V2.\n\nThe `index.md` guide lists non-Dune tools that wizards use to make their work easier. These tools are useful for learning how each ERC-xxx standard works, understanding the current crypto data ecosystem, auditing smart contracts, and digging into smart contracts to understand their operation and data structure. Some of the tools mentioned include OpenZepplin's ERC-xxx Standards Docs, EVM Handbook, Solidity Visual Developer for VS Code, Deth.net, and ZK Zhao's map of the Crypto Data Landscape.\n\nThe `utility-queries.md` guide provides a list of queries that can help users build their own queries. These queries are focused on decoding contracts, starting points for queries, and NFTs. For example, the \"Is my Contract decoded yet\" queries by @0xBoxer and @chenxiangli are focused on decoding contracts on different networks, which can be useful for developers who want to analyze the contract's data.\n\nOverall, the guides in this folder offer valuable resources and tools for users to better understand and utilize the Dune Docs project. They provide a comprehensive collection of information that can be helpful for analysts who are curious about using the project and want to learn more about its various aspects.",
      "questions": ""
    }
  ],
  "summary": "The \"Citing Dune\" app technical guide, located in the `.autodoc\\docs\\json\\docs\\reference` folder, provides instructions on how to correctly reference and cite Dune queries and dashboards. This guide is focused on the app feature of referencing and sharing data on the Dune platform. It is essential for users who want to ensure they are properly crediting the creators of the queries, visualizations, and dashboards they use or mention in their work.\n\nFor example, if a user wants to include a Dune visualization in their blog post, they can refer to this guide to learn how to find the creator's username and the dashboard or query name on the Dune platform. The guide provides screenshots to illustrate how to locate this information. Additionally, the guide directs users to another page for more information on how to get embed links for visualizations they want to share.\n\nThe guide also highlights the limitations of commercial use of the queries and public dashboard on the Dune platform. It warns against copying, transmitting, modifying, or creating derivative works from the original queries and dashboard. It also prohibits any form of exploiting any portion, use, or access to Dune without the express written permission by Dune.\n\nOverall, the \"Citing Dune\" app technical guide provides clear instructions on how to properly reference and cite data and visualizations found on the Dune platform. It also emphasizes the importance of respecting the limitations of commercial use of the queries and dashboard on the platform. This guide is a valuable resource for users who want to ensure they are properly crediting the creators of the queries, visualizations, and dashboards they use or mention in their work.",
  "questions": ""
}